(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{100:function(e){e.exports={value:"athena",label:"Athena",checklist:[{item:"Limit access to Athena",description:"Ensure that access to Athena is limited to only the necessary users and roles.",howto:["Step 1: Navigate to the Athena console in the AWS Management Console.",'Step 2: Click on the "Settings" button in the top right corner.','Step 3: Under the "Query result location" section, select the S3 bucket you want to use for query results.','Step 4: Under the "Workgroup settings" section, configure the appropriate workgroup settings for your users and roles.','Step 5: Click on the "Save" button.']},{item:"Use IAM policies to control access",description:"Use IAM policies to control access to Athena resources.",howto:["Step 1: Navigate to the IAM console in the AWS Management Console.","Step 2: Create or configure IAM policies to control access to Athena resources.","Step 3: Assign the appropriate policies to the necessary users and roles."]},{item:"Use encryption",description:"Use encryption to protect sensitive data at rest and in transit.",howto:["Step 1: Use AWS KMS to encrypt sensitive data at rest.","Step 2: Use HTTPS to encrypt data in transit."]},{item:"Enable CloudTrail logging",description:"Enable CloudTrail logging for Athena to track usage and changes to the service.",howto:["Step 1: Navigate to the CloudTrail console in the AWS Management Console.",'Step 2: Click on the "Trails" link in the left-hand navigation menu.','Step 3: Click on the "Create trail" button.',"Step 4: Specify the trail details, such as the trail name, S3 bucket, and optional SNS topic.",'Step 5: Under the "Event selector" section, select the Athena events you want to log.','Step 6: Click on the "Create" button.']},{item:"Enable VPC access",description:"Enable VPC access for Athena to limit access to resources within your VPC.",howto:["Step 1: Navigate to the Athena console in the AWS Management Console.",'Step 2: Click on the "Settings" button in the top right corner.','Step 3: Under the "Query result location" section, select the S3 bucket you want to use for query results.','Step 4: Under the "Amazon VPC" section, configure the appropriate VPC settings for your resources.','Step 5: Click on the "Save" button.']},{item:"Enable query result encryption",description:"Enable query result encryption to protect sensitive data in query results.",howto:["Step 1: Navigate to the Athena console in the AWS Management Console.",'Step 2: Click on the "Settings" button in the top right corner.','Step 3: Under the "Query result location" section, select the S3 bucket you want to use for query results.',"Step 4: Enable server-side encryption for the S3 bucket.",'Step 5: Click on the "Save" button.']},{item:"Use AWS Glue to manage Athena data catalog",description:"Use AWS Glue to manage the Athena data catalog and ensure that it is up-to-date and accurate.",howto:["Step 1: Navigate to the AWS Glue console in the AWS Management Console.","Step 2: Create or configure a crawler to crawl your data sources and create tables in the Athena data catalog.","Step 3: Schedule the crawler to run at regular intervals to ensure that the data catalog is up-to-date.","Step 4: Use the Athena data catalog to query your data."]},{item:"Enable Amazon S3 server-side encryption",description:"Enable Amazon S3 server-side encryption to protect data stored in S3 that is accessed by Athena.",howto:["Step 1: Navigate to the S3 console in the AWS Management Console.","Step 2: Select the S3 bucket you want to use for query results.",'Step 3: Click on the "Properties" button.','Step 4: Under the "Default encryption" section, select the appropriate encryption method.','Step 5: Click on the "Save" button.']},{item:"Use parameterized queries",description:"Use parameterized queries to protect against SQL injection attacks.",howto:["Step 1: Write your SQL queries using parameters.","Step 2: Specify the parameter values when executing the queries.","Step 3: Use prepared statements to reuse the same query with different parameter values."]}]}},101:function(e){e.exports={value:"autoscaling",label:"AWS Auto Scaling",checklist:[{item:"Use IAM roles to control access to AWS Auto Scaling resources",description:"Using IAM roles enables you to control which users and applications have access to AWS Auto Scaling resources and what actions they can perform.",howto:["Step 1: Define IAM roles for your users and applications.","Step 2: Grant the necessary permissions to the IAM roles.","Step 3: Attach the IAM roles to your AWS Auto Scaling resources, such as launch configurations and Auto Scaling groups."]},{item:"Encrypt data in transit and at rest",description:"Encrypting data in transit and at rest helps protect sensitive information from interception and unauthorized access.",howto:["Step 1: Use TLS to encrypt data in transit between your Auto Scaling groups and your applications.","Step 2: Use AWS KMS (Key Management Service) or a third-party encryption solution to encrypt data at rest in your Auto Scaling groups and launch configurations."]},{item:"Limit network access to AWS Auto Scaling resources",description:"Limiting network access helps prevent unauthorized access and limits the impact of security breaches.",howto:["Step 1: Use security groups to control inbound and outbound traffic to your Auto Scaling groups.","Step 2: Use VPCs (Virtual Private Clouds) to isolate your Auto Scaling resources from other resources in your AWS account and from the public internet."]},{item:"Enable logging and monitoring",description:"Logging and monitoring enable you to detect and respond to security incidents and other issues affecting your Auto Scaling groups.",howto:["Step 1: Enable logging for your Auto Scaling groups and their components, such as launch configurations and scaling policies.","Step 2: Set up monitoring and alerting for key metrics and events, such as CPU and memory usage, scaling events, and unauthorized access attempts.","Step 3: Regularly review logs and metrics to detect and investigate potential security incidents."]},{item:"Regularly update your Auto Scaling groups and their components",description:"Regularly updating your Auto Scaling groups and their components helps ensure that security vulnerabilities are addressed and that you are using the latest features and functionality.",howto:["Step 1: Use the Auto Scaling console, AWS CLI, or API to check for available updates.","Step 2: Plan and schedule updates for your Auto Scaling groups and their components.","Step 3: Test updates in a non-production environment before applying them to your production Auto Scaling groups."]}]}},102:function(e){e.exports={value:"batch",label:"AWS Batch",checklist:[{item:"Use IAM roles to control access to AWS Batch resources",description:"Using IAM roles enables you to control which users and applications have access to AWS Batch resources and what actions they can perform.",howto:["Step 1: Define IAM roles for your users and applications.","Step 2: Grant the necessary permissions to the IAM roles.","Step 3: Attach the IAM roles to your AWS Batch resources, such as compute environments and job queues."]},{item:"Encrypt data in transit and at rest",description:"Encrypting data in transit and at rest helps protect sensitive information from interception and unauthorized access.",howto:["Step 1: Use TLS to encrypt data in transit between your AWS Batch compute environment and your applications.","Step 2: Use AWS KMS (Key Management Service) or a third-party encryption solution to encrypt data at rest in your AWS Batch job queues and compute environments."]},{item:"Limit network access to AWS Batch resources",description:"Limiting network access helps prevent unauthorized access and limits the impact of security breaches.",howto:["Step 1: Use security groups to control inbound and outbound traffic to your AWS Batch compute environment.","Step 2: Use VPCs (Virtual Private Clouds) to isolate your AWS Batch resources from other resources in your AWS account and from the public internet."]},{item:"Enable logging and monitoring",description:"Logging and monitoring enable you to detect and respond to security incidents and other issues affecting your AWS Batch environment.",howto:["Step 1: Enable logging for your AWS Batch environment and its components, such as compute environments and job queues.","Step 2: Set up monitoring and alerting for key metrics and events, such as CPU and memory usage, job failures, and unauthorized access attempts.","Step 3: Regularly review logs and metrics to detect and investigate potential security incidents."]},{item:"Regularly update your AWS Batch environment and its components",description:"Regularly updating your AWS Batch environment and its components helps ensure that security vulnerabilities are addressed and that you are using the latest features and functionality.",howto:["Step 1: Use the AWS Batch console, AWS CLI, or API to check for available updates.","Step 2: Plan and schedule updates for your AWS Batch environment and its components.","Step 3: Test updates in a non-production environment before applying them to your production environment."]}]}},103:function(e){e.exports={value:"cloudtrail",label:"CloudTrail",checklist:[{item:"Enable CloudTrail logging",description:"Enable AWS CloudTrail logging to track changes made to your AWS account and resources.",howto:["Step 1: Open the AWS Management Console and navigate to the CloudTrail service.","Step 2: Create a new trail and configure the settings, such as the S3 bucket to store the logs.","Step 3: Start logging by enabling the trail."]},{item:"Encrypt CloudTrail logs",description:"Use server-side encryption (SSE) or client-side encryption to encrypt CloudTrail logs at rest.",howto:["Step 1: Choose the appropriate encryption method, such as SSE-S3 or SSE-KMS.","Step 2: Configure the S3 bucket policy to enforce the encryption requirement."]},{item:"Restrict access to CloudTrail logs",description:"Limit access to CloudTrail logs to only authorized personnel, using IAM policies or bucket policies.",howto:["Step 1: Create an IAM policy that grants access only to the necessary users or roles.","Step 2: Configure the S3 bucket policy to enforce the IAM policy."]},{item:"Monitor CloudTrail logs",description:"Monitor CloudTrail logs for unusual activity, using services like Amazon CloudWatch or Amazon Athena.",howto:["Step 1: Configure CloudWatch to receive and monitor CloudTrail logs.","Step 2: Set up alerts or dashboards to detect and investigate any unusual activity."]},{item:"Enable multi-factor authentication (MFA) for CloudTrail logging",description:"Enable MFA for CloudTrail logging to prevent unauthorized changes to CloudTrail configuration.",howto:["Step 1: Enable MFA for the AWS account.","Step 2: Require MFA for CloudTrail logging operations."]},{item:"Regularly review CloudTrail logs",description:"Regularly review CloudTrail logs to identify and investigate any security or compliance issues.",howto:["Step 1: Set up a schedule to regularly review the CloudTrail logs.","Step 2: Analyze the logs for any suspicious or unexpected activity."]},{item:"Protect CloudTrail credentials",description:"Protect CloudTrail credentials, including access keys and secret access keys, using best practices like rotation and secure storage.",howto:["Step 1: Implement a password policy for the AWS account and enable password rotation.","Step 2: Use a secure method to store and manage the access keys and secret access keys, such as AWS Secrets Manager."]}]}},104:function(e){e.exports={value:"cloudtrail",label:"CloudTrail",checklist:[{item:"Enable CloudTrail logging",description:"Enable AWS CloudTrail logging to track changes made to your AWS account and resources.",howto:["Step 1: Open the AWS Management Console and navigate to the CloudTrail service.","Step 2: Create a new trail and configure the settings, such as the S3 bucket to store the logs.","Step 3: Start logging by enabling the trail."]},{item:"Encrypt CloudTrail logs",description:"Use server-side encryption (SSE) or client-side encryption to encrypt CloudTrail logs at rest.",howto:["Step 1: Choose the appropriate encryption method, such as SSE-S3 or SSE-KMS.","Step 2: Configure the S3 bucket policy to enforce the encryption requirement."]},{item:"Restrict access to CloudTrail logs",description:"Limit access to CloudTrail logs to only authorized personnel, using IAM policies or bucket policies.",howto:["Step 1: Create an IAM policy that grants access only to the necessary users or roles.","Step 2: Configure the S3 bucket policy to enforce the IAM policy."]},{item:"Monitor CloudTrail logs",description:"Monitor CloudTrail logs for unusual activity, using services like Amazon CloudWatch or Amazon Athena.",howto:["Step 1: Configure CloudWatch to receive and monitor CloudTrail logs.","Step 2: Set up alerts or dashboards to detect and investigate any unusual activity."]},{item:"Enable multi-factor authentication (MFA) for CloudTrail logging",description:"Enable MFA for CloudTrail logging to prevent unauthorized changes to CloudTrail configuration.",howto:["Step 1: Enable MFA for the AWS account.","Step 2: Require MFA for CloudTrail logging operations."]},{item:"Regularly review CloudTrail logs",description:"Regularly review CloudTrail logs to identify and investigate any security or compliance issues.",howto:["Step 1: Set up a schedule to regularly review the CloudTrail logs.","Step 2: Analyze the logs for any suspicious or unexpected activity."]},{item:"Protect CloudTrail credentials",description:"Protect CloudTrail credentials, including access keys and secret access keys, using best practices like rotation and secure storage.",howto:["Step 1: Implement a password policy for the AWS account and enable password rotation.","Step 2: Use a secure method to store and manage the access keys and secret access keys, such as AWS Secrets Manager."]}]}},105:function(e){e.exports={value:"compute_optimizer",label:"AWS Compute Optimizer",checklist:[{item:"Enable encryption for Compute Optimizer data",description:"Enabling encryption for Compute Optimizer data at rest helps protect sensitive information from unauthorized access or disclosure.",howto:["Step 1: Enable Amazon S3 server-side encryption for the S3 bucket used by Compute Optimizer.","Step 2: Use AWS KMS (Key Management Service) or a third-party encryption solution to encrypt data at rest in Compute Optimizer."]},{item:"Enable AWS CloudTrail logging for Compute Optimizer",description:"Enabling AWS CloudTrail logging for Compute Optimizer helps you monitor and audit changes to your Compute Optimizer resources.",howto:["Step 1: Create an AWS CloudTrail trail for Compute Optimizer.","Step 2: Configure the trail to log all Compute Optimizer events.","Step 3: Use AWS CloudTrail to monitor and analyze Compute Optimizer events."]},{item:"Limit access to Compute Optimizer",description:"Limiting access to Compute Optimizer helps prevent unauthorized access and limits the impact of security breaches.",howto:["Step 1: Use IAM roles and policies to control access to Compute Optimizer.","Step 2: Limit access to Compute Optimizer to only the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in Compute Optimizer."]},{item:"Regularly review and audit security controls",description:"Regularly reviewing and auditing security controls helps ensure that your Compute Optimizer resources are secure and compliant with your security policies.",howto:["Step 1: Use AWS Config and AWS CloudTrail to track changes to Compute Optimizer resources and ensure that they are compliant with your security policies.","Step 2: Use AWS Security Hub to centrally view and manage your security alerts and compliance status across Compute Optimizer resources.","Step 3: Regularly review and audit your security controls to identify and remediate any security issues."]},{item:"Ensure data accuracy",description:"Ensuring data accuracy helps Compute Optimizer provide accurate recommendations and avoid potential security issues.",howto:["Step 1: Ensure that your Compute Optimizer data is accurate and up-to-date.","Step 2: Regularly review your Compute Optimizer data and update it as needed.","Step 3: Use AWS CloudTrail to monitor and log changes to your Compute Optimizer data."]}]}},106:function(e){e.exports={value:"dynamodb",label:"DynamoDB",checklist:[{item:"Enable VPC Endpoints",description:"Enable VPC endpoints to ensure that all traffic to and from your DynamoDB tables is restricted within your VPC and does not traverse the public internet.",howto:["Step 1: Open the Amazon VPC console and navigate to the Endpoints section.","Step 2: Create an endpoint for DynamoDB.","Step 3: Configure the endpoint policy to restrict access to only the necessary resources."]},{item:"Use IAM roles",description:"Use IAM roles to control access to your DynamoDB tables and limit access to only the necessary permissions.",howto:["Step 1: Open the Amazon DynamoDB console and navigate to the Roles section.","Step 2: Create an IAM role with the necessary permissions for your DynamoDB tables.","Step 3: Assign the IAM role to your DynamoDB tables to control access."]},{item:"Enable encryption",description:"Enable server-side encryption for your DynamoDB tables to protect against unauthorized access to your data.",howto:["Step 1: Open the Amazon DynamoDB console and navigate to the Table settings.","Step 2: Choose the encryption option and provide the necessary information.","Step 3: Save the changes to enable server-side encryption."]},{item:"Monitor access patterns",description:"Monitor access patterns to your DynamoDB tables to detect anomalous behavior and potential security threats.",howto:["Step 1: Open the Amazon CloudWatch console and navigate to the DynamoDB metrics section.","Step 2: Create a CloudWatch alarm to monitor access patterns to your DynamoDB tables.","Step 3: Configure the alarm to send notifications in the event of anomalous behavior."]},{item:"Enable audit logging",description:"Enable audit logging for your DynamoDB tables to track access and changes to your data.",howto:["Step 1: Open the Amazon CloudTrail console and navigate to the Trails section.","Step 2: Create a trail for your DynamoDB tables and configure the necessary settings.","Step 3: Save the changes to enable audit logging."]},{item:"Enable automatic backups",description:"Enable automatic backups for your DynamoDB tables to ensure that you can restore your data in the event of a disaster or data loss.",howto:["Step 1: Open the Amazon DynamoDB console and navigate to the Backup & restore section.","Step 2: Choose the backup option and provide the necessary information.","Step 3: Save the changes to enable automatic backups."]},{item:"Use fine-grained access control",description:"Use fine-grained access control to limit access to specific items or attributes within your DynamoDB tables.",howto:["Step 1: Open the Amazon DynamoDB console and navigate to the Table settings.","Step 2: Choose the fine-grained access control option and provide the necessary information.","Step 3: Save the changes to enable fine-grained access control."]},{item:"Monitor network traffic",description:"Monitor network traffic to and from your DynamoDB tables to detect and prevent unauthorized access or data exfiltration.",howto:["Step 1: Open the Amazon VPC console and navigate to the Flow Logs section.","Step 2: Create a flow log for your DynamoDB tables and configure the necessary settings.","Step 3: Save the changes to enable network traffic monitoring."]}]}},107:function(e){e.exports={value:"ebs",label:"Amazon Elastic Block Store (EBS)",checklist:[{item:"Encrypt data at rest",description:"Encrypting your EBS volumes at rest helps protect your data from unauthorized access or disclosure in the event of theft or loss of your storage devices.",howto:["Step 1: Use AWS KMS (Key Management Service) or a third-party encryption solution to encrypt your EBS volumes at rest.","Step 2: Ensure that your EBS volumes are set to encrypt by default.","Step 3: Regularly audit your EBS encryption settings to ensure compliance with your security policies."]},{item:"Use secure AWS Identity and Access Management (IAM) policies",description:"Using secure IAM policies helps ensure that access to your EBS volumes is limited to authorized users and applications.",howto:["Step 1: Use IAM roles and policies to control access to your EBS volumes.","Step 2: Grant access only to the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your EBS environment."]},{item:"Implement backup and disaster recovery plans",description:"Implementing backup and disaster recovery plans helps ensure that your EBS volumes are available and functional during a security breach or other disaster.",howto:["Step 1: Determine your recovery time objective (RTO) and recovery point objective (RPO) for each of your EBS volumes.","Step 2: Use AWS Backup or a third-party backup solution to back up your EBS volumes on a regular basis.","Step 3: Use AWS Disaster Recovery or a third-party disaster recovery solution to replicate your EBS volumes to another location for disaster recovery purposes.","Step 4: Test your backup and disaster recovery plans regularly to ensure that they work as expected."]},{item:"Monitor EBS volume activity",description:"Monitoring EBS volume activity helps you identify potential security issues or anomalies in your EBS environment.",howto:["Step 1: Use Amazon CloudWatch to monitor key metrics, such as IOPS, latency, and throughput, for your EBS volumes.","Step 2: Set up alarms to notify you of any abnormal behavior in your EBS environment.","Step 3: Use AWS Config and AWS CloudTrail to track changes to your EBS volumes and ensure that they are compliant with your security policies."]},{item:"Regularly review and audit security controls",description:"Regularly reviewing and auditing security controls helps ensure that your EBS resources are secure and compliant with your security policies.",howto:["Step 1: Use AWS Config and AWS CloudTrail to track changes to your EBS volumes and ensure that they are compliant with your security policies.","Step 2: Use AWS Security Hub to centrally view and manage your security alerts and compliance status across your EBS environment.","Step 3: Regularly review and audit your security controls to identify and remediate any security issues."]}]}},108:function(e){e.exports={value:"ec2",label:"EC2",checklist:[{item:"Use security groups",description:"Create and configure security groups to control inbound and outbound traffic for your EC2 instances.",howto:['Step 1: Sign in to the AWS Management Console by navigating to https://aws.amazon.com/ and clicking on the "Sign in to the Console" button in the upper right corner. Sign in using your AWS credentials.','Step 2: In the AWS Management Console dashboard, find the "Services" dropdown in the top left corner and click on it. In the "Networking & Content Delivery" category, click on "EC2" to open the Amazon EC2 Console.','Step 3: In the EC2 Console, navigate to the "Security Groups" section and click on the "Create Security Group" button.',"Step 4: Specify the security group details, such as the name, description, and inbound and outbound rules.",'Step 5: Review and validate the security group details, and then click on the "Create" button to save your security group.']},{item:"Enable monitoring",description:"Enable CloudWatch monitoring to track the performance and status of your EC2 instances.",howto:['Step 1: Sign in to the AWS Management Console by navigating to https://aws.amazon.com/ and clicking on the "Sign in to the Console" button in the upper right corner. Sign in using your AWS credentials.','Step 2: In the AWS Management Console dashboard, find the "Services" dropdown in the top left corner and click on it. In the "Management & Governance" category, click on "CloudWatch" to open the Amazon CloudWatch Console.','Step 3: In the CloudWatch Console, navigate to the "Metrics" section and select the EC2 instance you want to monitor.','Step 4: Click on the "Actions" dropdown and select "Enable Detailed Monitoring".','Step 5: Review and validate the monitoring details, and then click on the "Enable" button to start monitoring your EC2 instance.']},{item:"Create IAM roles",description:"Create IAM roles to manage access to your EC2 instances and assign permissions for AWS resources and services.",howto:['Step 1: Sign in to the AWS Management Console by navigating to https://aws.amazon.com/ and clicking on the "Sign in to the Console" button in the upper right corner. Sign in using your AWS credentials.','Step 2: In the AWS Management Console dashboard, find the "Services" dropdown in the top left corner and click on it. In the "Security, Identity & Compliance" category, click on "IAM" to open the AWS Identity and Access Management (IAM) Console.','Step 3: In the IAM Console, navigate to the "Roles" section and click on the "Create Role" button.','Step 4: Select the AWS service that will use this role, in this case EC2, and then click on the "Next: Permissions" button.','Step 5: Select the permissions that you want to assign to the role, or attach a policy to the role, and then click on the "Next: Tags" button.','Step 6: (Optional) Add tags to your role for better organization and management, and then click on the "Next: Review" button.','Step 7: Review and validate the role details, and then click on the "Create role" button to save your role.']},{item:"Enable VPC Flow Logs",description:"Enable VPC Flow Logs to monitor and capture information about IP traffic going to and from your EC2 instances in your VPC.",howto:['Step 1: Sign in to the AWS Management Console by navigating to https://aws.amazon.com/ and clicking on the "Sign in to the Console" button in the upper right corner. Sign in using your AWS credentials.','Step 2: In the AWS Management Console dashboard, find the "Services" dropdown in the top left corner and click on it. In the "Networking & Content Delivery" category, click on "VPC" to open the Amazon VPC Console.',"Step 3: In the Amazon VPC Console, navigate to the VPC for which you want to enable flow logs and select it.",'Step 4: Click on the "Flow Logs" tab and then click on the "Create Flow Log" button.','Step 5: In the "Create Flow Log" page, specify the flow log settings such as the target S3 bucket for storing the logs, the log format, and the IAM role for the flow log.','Step 6: Review and validate the flow log settings, and then click on the "Create" button to create the flow log.','Step 7: Enable VPC Flow Logs for each network interface or subnet that you want to monitor by selecting the network interface or subnet and then clicking on the "Actions" button and selecting "Enable VPC Flow Logs".',"Step 8: Monitor and analyze the VPC Flow Logs using services like Amazon CloudWatch Logs or Amazon Athena."]},{item:"Implement Network ACLs",description:"Use Network Access Control Lists (NACLs) to add an additional layer of security by controlling traffic at the subnet level.",howto:['Step 1: In the AWS Management Console dashboard, find the "Services" dropdown in the top left corner and click on it. In the "Networking & Content Delivery" category, click on "VPC" to open the Amazon VPC Console.','Step 2: In the Amazon VPC Console, click on "Network ACLs" in the left-hand menu.','Step 3: Select the Network ACL you want to modify, and click the "Edit" button.',"Step 4: Add rules to your Network ACL to control inbound and outbound traffic.",'Step 5: Click "Save" to apply your changes.']},{item:"Enable AWS Config",description:"Enable AWS Config to continuously monitor and record your EC2 instances' configurations and evaluate them against best practices.",howto:['Step 1: In the AWS Management Console dashboard, find the "Services" dropdown in the top left corner and click on it. In the "Management & Governance" category, click on "AWS Config" to open the AWS Config Console.','Step 2: In the AWS Config Console, click on the "Settings" option in the left-hand menu.','Step 3: Click the "Edit" button next to "Resource types to record".','Step 4: Select "AWS::EC2::Instance" from the list of resource types.','Step 5: Click "Save" to enable AWS Config for EC2 instances.']},{item:"Encrypt EBS volumes",description:"Enable encryption for your Elastic Block Store (EBS) volumes to protect your data at rest.",howto:['Step 1: In the AWS Management Console dashboard, find the "Services" dropdown in the top left corner and click on it. In the "Compute" category, click on "EC2" to open the Amazon EC2 Console.','Step 2: In the Amazon EC2 Console, click on the "Volumes" option in the left-hand menu.','Step 3: Select the EBS volume you want to encrypt, and click the "Actions" button.','Step 4: Click "Encrypt" to encrypt the EBS volume.',"Step 5: Follow the prompts to create a new encryption key or select an existing one."]},{item:"Enable instance metadata protection",description:"Enable Instance Metadata Service Version 2 (IMDSv2) to protect against unauthorized access to the instance metadata.",howto:['Step 1: In the AWS Management Console dashboard, find the "Services" dropdown in the top left corner and click on it. In the "Compute" category, click on "EC2" to open the Amazon EC2 Console.','Step 2: In the Amazon EC2 Console, select the instance you want to modify and click the "Actions" button.','Step 3: Click "Modify Instance".','Step 4: Scroll down to the "Advanced Details" section and expand it.','Step 5: Under "IMDSv2 Settings", select "Require both a token and a signature for requests that access instance metadata".','Step 6: Click "Save" to apply your changes.']},{item:"Use dedicated tenancy",description:"Use dedicated tenancy to launch EC2 instances on dedicated hardware for increased security and compliance.",howto:['Step 1: Sign in to the AWS Management Console by navigating to https://aws.amazon.com/ and clicking on the "Sign in to the Console" button in the upper right corner. Sign in using your AWS credentials.','Step 2: In the AWS Management Console dashboard, find the "Services" dropdown in the top left corner and click on it. In the "Compute" category, click on "EC2" to open the Amazon EC2 Console.','Step 3: In the Amazon EC2 Console, click on "Launch Instance" to launch a new EC2 instance.','Step 4: In the "Step 1: Choose an Amazon Machine Image (AMI)" page, select the AMI you want to use for your EC2 instance and click on the "Next" button.','Step 5: In the "Step 2: Choose an Instance Type" page, select the instance type you want to use for your EC2 instance and click on the "Next" button.','Step 6: In the "Step 3: Configure Instance Details" page, under the "Tenancy" section, select "Dedicated" from the dropdown menu to launch the instance on dedicated hardware. Configure other settings as needed and click on the "Next" button.','Step 7: In the "Step 4: Add Storage" page, configure the storage settings for your EC2 instance and click on the "Next" button.','Step 8: In the "Step 5: Add Tags" page, add any necessary tags for your EC2 instance and click on the "Next" button.','Step 9: In the "Step 6: Configure Security Group" page, configure the security group settings for your EC2 instance and click on the "Review and Launch" button.','Step 10: In the "Step 7: Review Instance Launch" page, review the settings for your EC2 instance and click on the "Launch" button. Confirm the key pair settings and click on the "Launch Instances" button.',"Step 11: Wait for the EC2 instance to launch and become available. You can now access the instance as needed and take advantage of the dedicated tenancy benefits."]},{item:"Enable AWS Systems Manager",description:"Use AWS Systems Manager to manage and automate tasks on your EC2 instances, such as patching and configuration management.",howto:["Step 1: Open the AWS Systems Manager console.","Step 2: In the left navigation pane, choose the option for the service you want to enable, such as Patch Manager.","Step 3: Choose the desired configuration options, such as automatic patching, and specify the targets for the service.","Step 4: Save the changes to enable AWS Systems Manager for your EC2 instances."]},{item:"Regularly patch and update",description:"Regularly apply security patches and updates to your EC2 instances and applications to reduce vulnerabilities.",howto:["Step 1: Determine which instances and applications need to be patched or updated.","Step 2: Review the release notes and documentation for the patches or updates to understand any potential impacts or dependencies.","Step 3: Schedule a maintenance window for the patches or updates, taking into account any potential downtime or impact to users.","Step 4: Create backups or snapshots of the instances or applications before applying the patches or updates.","Step 5: Apply the patches or updates according to the vendor's instructions or best practices.","Step 6: Test the patched or updated instances or applications to ensure that they are functioning correctly.","Step 7: Monitor the instances or applications for any issues or errors after the patches or updates have been applied."]},{item:"Implement Amazon Inspector",description:"Use Amazon Inspector to assess the security and compliance of your EC2 instances by identifying potential security issues.",howto:["Step 1: Open the Amazon Inspector console.","Step 2: Create an assessment target and configure the assessment to meet your security and compliance requirements.","Step 3: Start the assessment and wait for it to complete.","Step 4: Review the assessment findings and take the recommended actions to remediate any security issues."]},{item:"Use Amazon GuardDuty",description:"Enable Amazon GuardDuty to continuously monitor and detect threats to your EC2 instances and AWS accounts.",howto:["Step 1: Open the Amazon GuardDuty console.","Step 2: Create a detector and enable it for your AWS account.","Step 3: Configure GuardDuty to monitor your EC2 instances for threats, such as port scanning, SSH brute force, and DNS exfiltration.","Step 4: Monitor GuardDuty findings and take the recommended actions to remediate any threats."]},{item:"Enable Amazon Macie",description:"Use Amazon Macie to discover, classify, and protect sensitive data stored in your EC2 instances.",howto:["Step 1: Open the Amazon Macie console.","Step 2: Create a data classification job to scan your S3 buckets and identify sensitive data.","Step 3: Review the classification results and take action to protect sensitive data, such as encrypting or deleting it.","Step 4: Monitor Macie alerts and notifications for any unauthorized access or data leaks."]},{item:"Implement AWS WAF",description:"Use AWS Web Application Firewall (WAF) to protect your web applications hosted on EC2 instances from common web exploits.",howto:["Step 1: Open the AWS WAF console.","Step 2: Create a web ACL and define rules to block common web exploits, such as SQL injection and cross-site scripting (XSS).","Step 3: Associate the web ACL with your CloudFront distribution or Application Load Balancer.","Step 4: Monitor WAF metrics and logs for any suspicious traffic and adjust your rules accordingly."]},{item:"Enable AWS Shield",description:"Enable AWS Shield to protect your EC2 instances from Distributed Denial of Service (DDoS) attacks.",howto:["Step 1: Open the AWS Shield console.","Step 2: Choose the AWS resource you want to protect, such as an EC2 instance or Application Load Balancer.","Step 3: Enable AWS Shield Standard or Advanced, depending on your requirements and budget.","Step 4: Monitor Shield metrics and logs for any DDoS attacks and take action to mitigate them."]}]}},109:function(e){e.exports={value:"ecr",label:"ECR",checklist:[{item:"Enable encryption",description:"Enable encryption at rest for your ECR repositories to protect against unauthorized access to your data.",howto:["Step 1: Open the Amazon ECR console and navigate to your repository.","Step 2: Choose the encryption option and provide the necessary information.","Step 3: Save the changes to enable encryption at rest."]},{item:"Use private repositories",description:"Use private repositories to protect your container images from being accessed by unauthorized users.",howto:["Step 1: Create a private ECR repository.","Step 2: Configure access policies to control who has access to the repository.","Step 3: Push container images to the private repository."]},{item:"Scan images for vulnerabilities",description:"Use Amazon ECR image scanning to detect and remediate vulnerabilities in your container images.",howto:["Step 1: Enable image scanning for your ECR repository.","Step 2: Run a scan on your container images to detect vulnerabilities.","Step 3: Remediate any identified vulnerabilities in your container images."]},{item:"Implement access control",description:"Use IAM policies and resource-based permissions to control access to your ECR repositories and images.",howto:["Step 1: Create IAM policies to control access to your ECR repositories and images.","Step 2: Apply the policies to the appropriate IAM users or roles.","Step 3: Configure resource-based permissions to further restrict access to your ECR repositories and images."]},{item:"Use VPC endpoints",description:"Use VPC endpoints to securely access your ECR repositories without exposing them to the public internet.",howto:["Step 1: Create a VPC endpoint for Amazon ECR.","Step 2: Configure your ECR repositories to use the VPC endpoint.","Step 3: Test the connection to ensure that it is working properly."]},{item:"Enable lifecycle policies",description:"Use lifecycle policies to automatically clean up untagged or unused images, and to expire old images to reduce storage costs.",howto:["Step 1: Create a lifecycle policy for your ECR repository.","Step 2: Define the rules for when images should be cleaned up or expired.","Step 3: Save the policy to apply it to the repository."]},{item:"Audit trail",description:"Enable AWS CloudTrail to log all API calls made to your ECR repositories for auditing and compliance purposes.",howto:["Step 1: Enable AWS CloudTrail for your AWS account.","Step 2: Configure the settings for logging ECR API calls.","Step 3: Review the logs to identify any unauthorized access or changes."]}]}},110:function(e){e.exports={value:"eks",label:"Amazon EKS",checklist:[{item:"Enable VPC Flow Logs",description:"Enabling VPC Flow Logs allows you to capture information about the IP traffic going to and from your EKS cluster, which can be useful for troubleshooting and security analysis.",howto:["Step 1: Open the Amazon VPC console.","Step 2: Select your VPC and click 'Create Flow Log'.","Step 3: Specify the flow log details, such as the destination for the log data.","Step 4: Review and create the flow log."]},{item:"Use RBAC (Role-Based Access Control) to control access to the Kubernetes API",description:"RBAC enables you to define granular access controls to the Kubernetes API, which helps prevent unauthorized access and privilege escalation.",howto:["Step 1: Define roles and role bindings for your users and groups.","Step 2: Apply the RBAC configuration to your EKS cluster.","Step 3: Test the RBAC configuration to ensure that it is working as expected."]},{item:"Encrypt data in transit and at rest",description:"Encrypting data in transit and at rest helps protect sensitive information from interception and unauthorized access.",howto:["Step 1: Use TLS to encrypt data in transit between your Kubernetes nodes and your applications.","Step 2: Use AWS KMS (Key Management Service) or a third-party encryption solution to encrypt data at rest in your EKS cluster."]},{item:"Use network policies to control traffic flow",description:"Network policies enable you to control the flow of traffic to and from your Kubernetes pods, which can help prevent unauthorized access and limit the impact of security breaches.",howto:["Step 1: Define network policies that specify which pods can communicate with each other and how.","Step 2: Apply the network policies to your EKS cluster."]},{item:"Regularly update your EKS cluster and its components",description:"Regularly updating your EKS cluster and its components helps ensure that security vulnerabilities are addressed and that you are using the latest features and functionality.",howto:["Step 1: Use the EKS console, AWS CLI, or API to check for available updates.","Step 2: Plan and schedule updates for your EKS cluster and its components.","Step 3: Test updates in a non-production environment before applying them to your production cluster."]},{item:"Enable logging and monitoring",description:"Logging and monitoring enable you to detect and respond to security incidents and other issues affecting your EKS cluster.",howto:["Step 1: Enable logging for your EKS cluster and its components, such as Kubernetes API server, control plane, and worker nodes.","Step 2: Set up monitoring and alerting for key metrics and events, such as CPU and memory usage, pod failures, and unauthorized access attempts.","Step 3: Regularly review logs and metrics to detect and investigate potential security incidents."]}]}},111:function(e){e.exports={value:"elasticbeanstalk",label:"AWS Elastic Beanstalk",checklist:[{item:"Use IAM roles to control access to AWS Elastic Beanstalk resources",description:"Using IAM roles enables you to control which users and applications have access to AWS Elastic Beanstalk resources and what actions they can perform.",howto:["Step 1: Define IAM roles for your users and applications.","Step 2: Grant the necessary permissions to the IAM roles.","Step 3: Attach the IAM roles to your AWS Elastic Beanstalk resources, such as environments and applications."]},{item:"Encrypt data in transit and at rest",description:"Encrypting data in transit and at rest helps protect sensitive information from interception and unauthorized access.",howto:["Step 1: Use TLS to encrypt data in transit between your Elastic Beanstalk environments and your applications.","Step 2: Use AWS KMS (Key Management Service) or a third-party encryption solution to encrypt data at rest in your Elastic Beanstalk environments and databases."]},{item:"Limit network access to Elastic Beanstalk resources",description:"Limiting network access helps prevent unauthorized access and limits the impact of security breaches.",howto:["Step 1: Use security groups to control inbound and outbound traffic to your Elastic Beanstalk environments.","Step 2: Use VPCs (Virtual Private Clouds) to isolate your Elastic Beanstalk resources from other resources in your AWS account and from the public internet."]},{item:"Enable logging and monitoring",description:"Logging and monitoring enable you to detect and respond to security incidents and other issues affecting your Elastic Beanstalk environments.",howto:["Step 1: Enable logging for your Elastic Beanstalk environments and their components, such as instances and databases.","Step 2: Set up monitoring and alerting for key metrics and events, such as CPU and memory usage, request rates, and unauthorized access attempts.","Step 3: Regularly review logs and metrics to detect and investigate potential security incidents."]},{item:"Regularly update your Elastic Beanstalk environments and their components",description:"Regularly updating your Elastic Beanstalk environments and their components helps ensure that security vulnerabilities are addressed and that you are using the latest features and functionality.",howto:["Step 1: Use the Elastic Beanstalk console, AWS CLI, or API to check for available updates.","Step 2: Plan and schedule updates for your Elastic Beanstalk environments and their components.","Step 3: Test updates in a non-production environment before applying them to your production Elastic Beanstalk environments."]},{item:"Implement function-level access control",description:"Use AWS Identity and Access Management (IAM) policies to control access to your Elastic Beanstalk environments. Restrict access to only the actions and resources that are necessary for the environment to perform its intended actions.",howto:["Step 1: Open the AWS Elastic Beanstalk console and navigate to your environment.","Step 2: Create an IAM role with the necessary permissions for your environment.","Step 3: Attach the IAM role to your environment and configure the environment to use it."]},{item:"Implement secure deployment practices",description:"Implementing secure deployment practices helps ensure that your Elastic Beanstalk environments are deployed securely and that your applications are not vulnerable to security breaches.",howto:["Step 1: Use secure coding practices when developing your application code.","Step 2: Use AWS CodePipeline to automate your deployment process and ensure that deployments are consistent and repeatable.","Step 3: Use AWS CodeDeploy to deploy new versions of your application code to your Elastic Beanstalk environments in a controlled and automated manner.","Step 4: Use blue/green deployments to test new versions of your application code in a production-like environment before deploying them to your live environment.","Step 5: Use AWS Config and AWS CloudTrail to track changes to your Elastic Beanstalk environments and ensure that they are compliant with your security policies."]},{item:"Use WAF to protect against web-based attacks",description:"AWS WAF (Web Application Firewall) can be used to protect against common web-based attacks such as SQL injection and cross-site scripting.",howto:["Step 1: Set up AWS WAF in front of your Elastic Beanstalk environment.","Step 2: Create rules to filter and block traffic based on IP addresses, geographic locations, or other criteria.","Step 3: Regularly review WAF logs to identify and investigate potential attacks."]},{item:"Implement access and authentication controls for applications",description:"Implementing access and authentication controls for your applications helps ensure that only authorized users can access sensitive information or perform privileged actions.",howto:["Step 1: Implement user authentication and authorization mechanisms in your application code.","Step 2: Use multi-factor authentication (MFA) to add an extra layer of security to user logins.","Step 3: Use temporary security credentials or role-based access control (RBAC) to limit the actions that users can perform in your application."]},{item:"Implement data protection controls for applications",description:"Implementing data protection controls for your applications helps ensure that sensitive information is protected from unauthorized access or disclosure.",howto:["Step 1: Implement encryption for sensitive data stored in your Elastic Beanstalk environment or in transit between your application and other resources.","Step 2: Use tokenization or masking to protect sensitive data such as credit card numbers or social security numbers.","Step 3: Implement data retention and disposal policies to ensure that sensitive data is only kept for as long as necessary and is securely disposed of when no longer needed."]}]}},112:function(e){e.exports={value:"fargate",label:"Fargate",checklist:[{item:"Use task roles",description:"Assign a task role to your Fargate tasks to ensure that they have only the necessary permissions to perform their specific functions.",howto:["Step 1: In the AWS Management Console, navigate to the Amazon ECS dashboard.",'Step 2: Choose the task definition you want to update, and click the "Edit" button.','Step 3: In the "Task execution IAM role" section, choose an existing role or create a new one.',"Step 4: Save your changes."]},{item:"Use VPC",description:"Deploy Fargate tasks in a VPC to control network access and to restrict public access to your resources.",howto:["Step 1: In the AWS Management Console, navigate to the Amazon ECS dashboard.","Step 2: Choose the cluster that your Fargate task will run on.",'Step 3: Choose the "Networking" tab, and click the "Edit" button.','Step 4: Choose "Custom" for your VPC configuration and configure your VPC settings.',"Step 5: Save your changes."]},{item:"Use security groups",description:"Define security groups to control inbound and outbound traffic for your Fargate tasks and to restrict access to only necessary ports.",howto:["Step 1: In the AWS Management Console, navigate to the Amazon ECS dashboard.","Step 2: Choose the cluster that your Fargate task will run on.",'Step 3: Choose the "Networking" tab, and click the "Edit" button.',"Step 4: Add or edit your security groups as necessary.","Step 5: Save your changes."]},{item:"Use IAM roles for service accounts (IRSA)",description:"Use IAM roles for service accounts (IRSA) to enable your pods to communicate securely with other AWS services using IAM credentials.",howto:["Step 1: Create an IAM role with the necessary permissions to access the AWS service you want to communicate with.","Step 2: Create a Kubernetes service account that maps to the IAM role you created in Step 1.","Step 3: Annotate your Kubernetes pods with the service account you created in Step 2.","Step 4: Use the AWS SDK to retrieve the IAM credentials associated with the service account to communicate with the AWS service."]},{item:"Encrypt data at rest",description:"Use encryption to protect sensitive data stored in volumes attached to Fargate tasks.",howto:["Step 1: Create or edit a task definition in the Amazon ECS console.",'Step 2: In the "Storage and Logging" section, choose an EBS volume and enable encryption.',"Step 3: Save your changes."]},{item:"Encrypt data in transit",description:"Use encryption to protect data in transit between Fargate tasks and other AWS services or external endpoints.",howto:["Step 1: In the AWS Management Console, navigate to the Amazon ECS dashboard.","Step 2: Choose the cluster that your Fargate task will run on.",'Step 3: Choose the "Networking" tab, and click the "Edit" button.',"Step 4: Enable encryption for your network traffic.","Step 5: Save your changes."]},{item:"Monitor container images",description:"Regularly scan and monitor container images for vulnerabilities and keep them up to date to reduce the risk of exploits.",howto:["Step 1: Set up a container image vulnerability scanning tool, such as Amazon ECR Image Scan or a third-party tool.","Step 2: Configure the scanning tool to automatically scan all new images and to rescan existing images on a regular basis.","Step 3: Review and act on the vulnerability reports generated by the scanning tool."]},{item:"Enable logging",description:"Enable logging for your Fargate tasks to monitor and audit activity within your containers.",howto:["Step 1: Configure your Fargate tasks to write logs to a logging driver, such as Amazon CloudWatch Logs.","Step 2: Set up log retention and log rotation policies to manage your log data.","Step 3: Use log analytics tools, such as Amazon CloudWatch Logs Insights or a third-party tool, to analyze your log data for insights and to identify issues."]},{item:"Use AWS Secrets Manager",description:"Use AWS Secrets Manager to securely store and manage sensitive data such as passwords, API keys, and other credentials used by your Fargate tasks.",howto:["Step 1: Create a new secret in AWS Secrets Manager for each piece of sensitive data that you need to store.","Step 2: Configure your Fargate tasks to retrieve the secrets from AWS Secrets Manager at runtime.","Step 3: Set up policies and permissions to control access to your secrets and to ensure that only authorized users and applications can retrieve them."]}]}},113:function(e){e.exports={value:"lambda",label:"Lambda",checklist:[{item:"Use AWS Secrets Manager or AWS Systems Manager Parameter Store to store sensitive information",description:"To prevent accidental exposure of sensitive information, use AWS Secrets Manager or AWS Systems Manager Parameter Store to store sensitive information such as passwords, API keys, and database connection strings.",howto:["Step 1: Open the AWS Secrets Manager or AWS Systems Manager Parameter Store console.","Step 2: Create a new secret or parameter and provide the sensitive information.","Step 3: Configure the access control for the secret or parameter to ensure that only authorized users can access it."]},{item:"Implement function-level access control",description:"Use AWS Identity and Access Management (IAM) policies to control access to your Lambda functions. Restrict access to only the actions and resources that are necessary for the function to perform its intended actions.",howto:["Step 1: Open the AWS Lambda console and navigate to your function.","Step 2: Create an IAM role with the necessary permissions for your function.","Step 3: Attach the IAM role to your function and configure the function to use it."]},{item:"Enable VPC access for your Lambda functions",description:"Use Amazon Virtual Private Cloud (VPC) to isolate your Lambda functions from the public internet and to access resources in your own VPC.",howto:["Step 1: Open the AWS Lambda console and navigate to your function.","Step 2: Configure your function to connect to a VPC.","Step 3: Configure the network settings for your function to access resources in your VPC."]},{item:"Enable AWS X-Ray tracing",description:"Enable AWS X-Ray tracing to monitor and troubleshoot your serverless application. X-Ray provides end-to-end tracing of requests and helps you identify performance bottlenecks and errors.",howto:["Step 1: Open the AWS Lambda console and navigate to your function.","Step 2: Enable X-Ray tracing for your function.","Step 3: Use the X-Ray console to view traces and analyze the performance of your function."]},{item:"Use AWS Key Management Service to encrypt data in transit and at rest",description:"Use AWS Key Management Service (KMS) to create and manage encryption keys that protect your data. Encrypt data in transit and at rest using KMS-managed keys.",howto:["Step 1: Open the AWS Key Management Service console.","Step 2: Create a KMS key and configure its settings.","Step 3: Use the KMS key to encrypt data in transit and at rest."]},{item:"Monitor and log function invocations",description:"Use Amazon CloudWatch to monitor and log function invocations. Use CloudWatch Logs to store and analyze logs generated by your Lambda functions.",howto:["Step 1: Open the AWS Lambda console and navigate to your function.","Step 2: Enable CloudWatch logs for your function.","Step 3: Use the CloudWatch console to view and analyze the logs generated by your function."]},{item:"Use AWS Config to monitor resource configurations and compliance",description:"Use AWS Config to monitor the configurations of your Lambda functions and their associated resources. Use Config rules to define compliance rules for your resources and to get notifications when they change.",howto:["Step 1: Open the AWS Config console and create a configuration recorder to record changes to your Lambda functions and their resources.","Step 2: Create and apply Config rules to monitor your resources for compliance with your organization's policies and standards.","Step 3: Review the Config timeline to see a history of configuration changes to your resources and investigate any changes that violate your compliance rules."]},{item:"Implement least privilege permissions for your Lambda functions",description:"Use the principle of least privilege to assign permissions to your Lambda functions. Assign only the necessary permissions to access the required resources and actions.",howto:["Step 1: Define the minimum set of permissions required for your Lambda function to perform its intended actions.","Step 2: Create an IAM policy that grants your Lambda function the necessary permissions.","Step 3: Attach the IAM policy to the Lambda function's execution role."]},{item:"Use environment variables to configure your Lambda functions",description:"Use environment variables to pass configuration information to your Lambda functions. Store sensitive configuration information in AWS Secrets Manager or AWS Systems Manager Parameter Store.",howto:["Step 1: Define the environment variables that your Lambda function requires for configuration.","Step 2: Store sensitive configuration information, such as passwords or API keys, in AWS Secrets Manager or AWS Systems Manager Parameter Store.","Step 3: Set the environment variables for your Lambda function in the AWS Lambda console or through the AWS CLI."]},{item:"Implement automated deployments for your Lambda functions",description:"Use AWS CodeDeploy to automate the deployment of your Lambda functions. CodeDeploy can help you perform rolling deployments and automate the testing of your functions.",howto:["Step 1: Define the deployment configuration for your Lambda function in AWS CodeDeploy.","Step 2: Create a CodeDeploy deployment group and specify the Lambda function as the deployment target.","Step 3: Deploy your Lambda function using the CodeDeploy console or the AWS CLI."]},{item:"Test and monitor your Lambda functions",description:"Use AWS Lambda built-in monitoring capabilities to monitor the health of your Lambda functions. Use AWS Lambda Test Events to test your functions in different scenarios.",howto:["Step 1: Use the AWS Lambda console or AWS CLI to create a new test event.","Step 2: Invoke your Lambda function with the test event and verify that it behaves as expected.","Step 3: Monitor your Lambda function's metrics in Amazon CloudWatch and set up alarms to alert you when metrics breach your thresholds."]}]}},114:function(e){e.exports={value:"lightsail",label:"Amazon Lightsail",checklist:[{item:"Use strong passwords and multi-factor authentication (MFA)",description:"Using strong passwords and MFA helps prevent unauthorized access to your Lightsail resources and data.",howto:["Step 1: Choose a strong, unique password that contains a mix of uppercase and lowercase letters, numbers, and symbols.","Step 2: Enable MFA for your Lightsail account and IAM users.","Step 3: Regularly rotate your passwords and MFA tokens."]},{item:"Encrypt data in transit and at rest",description:"Encrypting data in transit and at rest helps protect sensitive information from interception and unauthorized access.",howto:["Step 1: Use TLS to encrypt data in transit between your Lightsail instances and your applications.","Step 2: Use AWS KMS (Key Management Service) or a third-party encryption solution to encrypt data at rest in your Lightsail instances and block storage volumes."]},{item:"Limit network access to Lightsail resources",description:"Limiting network access helps prevent unauthorized access and limits the impact of security breaches.",howto:["Step 1: Use security groups to control inbound and outbound traffic to your Lightsail instances.","Step 2: Use VPC Peering to connect your Lightsail instances to other VPCs or on-premises resources.","Step 3: Use a VPN (Virtual Private Network) to access your Lightsail instances from remote locations."]},{item:"Enable backups and snapshots",description:"Backups and snapshots enable you to recover your data and restore your instances to a previous state in case of data loss or security incidents.",howto:["Step 1: Enable automatic daily backups for your Lightsail instances.","Step 2: Take manual snapshots of your Lightsail instances before making significant changes or upgrades.","Step 3: Test backups and snapshots to ensure that you can restore your data and instances when needed."]},{item:"Regularly update your Lightsail instances and their software",description:"Regularly updating your Lightsail instances and their software helps ensure that security vulnerabilities are addressed and that you are using the latest features and functionality.",howto:["Step 1: Use the Lightsail console, AWS CLI, or API to check for available updates.","Step 2: Plan and schedule updates for your Lightsail instances and their software.","Step 3: Test updates in a non-production environment before applying them to your production instances."]},{item:"Enable logging and monitoring",description:"Logging and monitoring enable you to detect and respond to security incidents and other issues affecting your Lightsail instances.",howto:["Step 1: Enable logging for your Lightsail instances and their applications, such as web servers and databases.","Step 2: Set up monitoring and alerting for key metrics and events, such as CPU and memory usage, disk space, and unauthorized access attempts.","Step 3: Regularly review logs and metrics to detect and investigate potential security incidents."]}]}},115:function(e){e.exports={value:"localzones",label:"AWS Local Zones",checklist:[{item:"Use VPCs to isolate resources in Local Zones",description:"Using VPCs helps to isolate your resources within AWS Local Zones and prevent unauthorized access to your resources.",howto:["Step 1: Create VPCs in AWS Local Zones.","Step 2: Configure VPCs to allow traffic only from trusted sources.","Step 3: Use security groups and network ACLs to control inbound and outbound traffic to your resources."]},{item:"Encrypt data in transit and at rest",description:"Encrypting data in transit and at rest helps protect sensitive information from interception and unauthorized access.",howto:["Step 1: Use TLS to encrypt data in transit between your Local Zones and your applications.","Step 2: Use AWS KMS (Key Management Service) or a third-party encryption solution to encrypt data at rest in your Local Zones and databases."]},{item:"Limit access to Local Zones resources",description:"Limiting access to Local Zones resources helps prevent unauthorized access and limits the impact of security breaches.",howto:["Step 1: Use IAM roles and policies to control access to your Local Zones resources.","Step 2: Limit access to your Local Zones resources to only the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your Local Zones."]},{item:"Enable logging and monitoring",description:"Logging and monitoring enable you to detect and respond to security incidents and other issues affecting your Local Zones resources.",howto:["Step 1: Enable logging for your Local Zones resources and their components, such as instances and databases.","Step 2: Set up monitoring and alerting for key metrics and events, such as CPU and memory usage, request rates, and unauthorized access attempts.","Step 3: Regularly review logs and metrics to detect and investigate potential security incidents."]},{item:"Regularly update your Local Zones resources",description:"Regularly updating your Local Zones resources helps ensure that security vulnerabilities are addressed and that you are using the latest features and functionality.",howto:["Step 1: Use the AWS Management Console, AWS CLI, or API to check for available updates.","Step 2: Plan and schedule updates for your Local Zones resources and their components.","Step 3: Test updates in a non-production environment before applying them to your production Local Zones resources."]},{item:"Implement function-level access control",description:"Use AWS Identity and Access Management (IAM) policies to control access to your Local Zones resources. Restrict access to only the actions and resources that are necessary for the resource to perform its intended actions.",howto:["Step 1: Open the AWS Management Console and navigate to your resource.","Step 2: Create an IAM role with the necessary permissions for your resource.","Step 3: Attach the IAM role to your resource and configure the resource to use it."]},{item:"Implement secure deployment practices",description:"Implementing secure deployment practices helps ensure that your Local Zones resources are deployed securely and that your applications are not vulnerable to security breaches.",howto:["Step 1: Use secure coding practices when developing your application code.","Step 2: Use AWS CodePipeline to automate your deployment process and ensure that deployments are consistent and repeatable.","Step 3: Use AWS CodeDeploy to deploy new versions of your application code to your Local Zones resources in a controlled and automated manner.","Step 4: Use blue/green deployments to test new versions of your application code in a production-like environment before deploying them to your live environment.","Step 5: Use AWS Config and AWS CloudTrail to track changes to your Local Zones resources and ensure that they are compliant with your security policies."]},{item:"Implement backup and disaster recovery plans",description:"Implementing backup and disaster recovery plans helps ensure that your Local Zones resources are available and functional during a security breach or other disaster.",howto:["Step 1: Determine your recovery time objective (RTO) and recovery point objective (RPO) for each of your Local Zones resources.","Step 2: Use AWS Backup or a third-party backup solution to back up your Local Zones resources on a regular basis.","Step 3: Use AWS Disaster Recovery or a third-party disaster recovery solution to replicate your Local Zones resources to another location for disaster recovery purposes.","Step 4: Test your backup and disaster recovery plans regularly to ensure that they work as expected."]},{item:"Implement least privilege access",description:"Implementing least privilege access helps ensure that users and applications have only the minimum privileges necessary to perform their intended actions.",howto:["Step 1: Use IAM roles and policies to control access to your Local Zones resources.","Step 2: Limit access to only the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your Local Zones."]},{item:"Implement security controls for data at rest",description:"Implementing security controls for data at rest helps ensure that sensitive information is protected from unauthorized access or disclosure.",howto:["Step 1: Use AWS KMS or a third-party encryption solution to encrypt data at rest in your Local Zones resources and databases.","Step 2: Implement data retention and disposal policies to ensure that sensitive data is only kept for as long as necessary and is securely disposed of when no longer needed.","Step 3: Use access controls to restrict access to sensitive data to only the users and applications that require it."]},{item:"Regularly review and audit security controls",description:"Regularly reviewing and auditing security controls helps ensure that your Local Zones resources are secure and compliant with your security policies.",howto:["Step 1: Use AWS Config and AWS CloudTrail to track changes to your Local Zones resources and ensure that they are compliant with your security policies.","Step 2: Use AWS Security Hub to centrally view and manage your security alerts and compliance status across your Local Zones resources.","Step 3: Regularly review and audit your security controls to identify and remediate any security issues."]}]}},116:function(e){e.exports={value:"outposts",label:"AWS Outposts",checklist:[{item:"Isolate resources in VPCs",description:"Isolating your resources in Virtual Private Clouds (VPCs) helps to prevent unauthorized access to your AWS Outposts resources.",howto:["Step 1: Create VPCs in your AWS Outposts environment.","Step 2: Configure VPCs to allow traffic only from trusted sources.","Step 3: Use security groups and network ACLs to control inbound and outbound traffic to your resources."]},{item:"Encrypt data in transit and at rest",description:"Encrypting data in transit and at rest helps protect sensitive information from interception and unauthorized access.",howto:["Step 1: Use TLS to encrypt data in transit between your Outposts environment and your applications.","Step 2: Use AWS KMS (Key Management Service) or a third-party encryption solution to encrypt data at rest in your Outposts environment and databases."]},{item:"Limit access to Outposts resources",description:"Limiting access to your AWS Outposts resources helps prevent unauthorized access and limits the impact of security breaches.",howto:["Step 1: Use IAM roles and policies to control access to your Outposts resources.","Step 2: Limit access to your Outposts resources to only the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your Outposts environment."]},{item:"Enable logging and monitoring",description:"Logging and monitoring enable you to detect and respond to security incidents and other issues affecting your AWS Outposts environment.",howto:["Step 1: Enable logging for your Outposts environment and its components, such as instances and databases.","Step 2: Set up monitoring and alerting for key metrics and events, such as CPU and memory usage, request rates, and unauthorized access attempts.","Step 3: Regularly review logs and metrics to detect and investigate potential security incidents."]},{item:"Regularly update your Outposts resources",description:"Regularly updating your Outposts resources helps ensure that security vulnerabilities are addressed and that you are using the latest features and functionality.",howto:["Step 1: Use the AWS Management Console, AWS CLI, or API to check for available updates.","Step 2: Plan and schedule updates for your Outposts resources and their components.","Step 3: Test updates in a non-production environment before applying them to your production Outposts environment."]},{item:"Implement function-level access control",description:"Use AWS Identity and Access Management (IAM) policies to control access to your Outposts resources. Restrict access to only the actions and resources that are necessary for the resource to perform its intended actions.",howto:["Step 1: Open the AWS Management Console and navigate to your resource.","Step 2: Create an IAM role with the necessary permissions for your resource.","Step 3: Attach the IAM role to your resource and configure the resource to use it."]},{item:"Implement secure deployment practices",description:"Implementing secure deployment practices helps ensure that your Outposts resources are deployed securely and that your applications are not vulnerable to security breaches.",howto:["Step 1: Use secure coding practices when developing your application code.","Step 2: Use AWS CodePipeline to automate your deployment process and ensure that deployments are consistent and repeatable.","Step 3: Use AWS CodeDeploy to deploy new versions of your application code to your Outposts environment in a controlled and automated manner.","Step 4: Use blue/green deployments to test new versions of your application code in a production-like environment before deploying them to your live environment.","Step 5: Use AWS Config and AWS CloudTrail to track changes to your Outposts resources and ensure that they are compliant with your security policies."]},{item:"Implement backup and disaster recovery plans",description:"Implementing backup and disaster recovery plans helps ensure that your Outposts resources are available and functional during a security breach or other disaster.",howto:["Step 1: Determine your recovery time objective (RTO) and recovery point objective (RPO) for each of your Outposts resources.","Step 2: Use AWS Backup or a third-party backup solution to back up your Outposts resources on a regular basis.","Step 3: Use AWS Disaster Recovery or a third-party disaster recovery solution to replicate your Outposts resources to another location for disaster recovery purposes.","Step 4: Test your backup and disaster recovery plans regularly to ensure that they work as expected."]},{item:"Implement least privilege access",description:"Implementing least privilege access helps ensure that users and applications have only the minimum privileges necessary to perform their intended actions.",howto:["Step 1: Use IAM roles and policies to control access to your Outposts resources.","Step 2: Limit access to only the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your Outposts environment."]},{item:"Implement security controls for data at rest",description:"Implementing security controls for data at rest helps ensure that sensitive information is protected from unauthorized access or disclosure.",howto:["Step 1: Use AWS KMS or a third-party encryption solution to encrypt data at rest in your Outposts environment and databases.","Step 2: Implement data retention and disposal policies to ensure that sensitive data is only kept for as long as necessary and is securely disposed of when no longer needed.","Step 3: Use access controls to restrict access to sensitive data to only the users and applications that require it."]},{item:"Regularly review and audit security controls",description:"Regularly reviewing and auditing security controls helps ensure that your Outposts resources are secure and compliant with your security policies.",howto:["Step 1: Use AWS Config and AWS CloudTrail to track changes to your Outposts resources and ensure that they are compliant with your security policies.","Step 2: Use AWS Security Hub to centrally view and manage your security alerts and compliance status across your Outposts environment.","Step 3: Regularly review and audit your security controls to identify and remediate any security issues."]}]}},117:function(e){e.exports={value:"s3",label:"S3",checklist:[{item:"Enable versioning",description:"Enable versioning for your S3 buckets to protect against accidental deletion or overwrite.",howto:['Step 1: Sign in to the AWS Management Console by navigating to https://aws.amazon.com/ and clicking on the "Sign in to the Console" button in the upper right corner. Sign in using your AWS credentials.','Step 2: In the AWS Management Console dashboard, find the "Services" dropdown in the top left corner and click on it. In the "Storage" category, click on "S3" to open the Amazon S3 Console.',"Step 3: In the Amazon S3 Console, locate the bucket for which you want to enable versioning and click on its name to open the bucket details.",'Step 4: Click on the "Properties" tab in the bucket details view.','Step 5: In the "Properties" tab, find the "Bucket Versioning" card. Click on the "Edit" button in the top right corner of the card. In the "Bucket Versioning configuration" section that appears, select the "Enable" option. Click on the "Save changes" button to save your configuration.']},{item:"Enable encryption in S3",description:"Enable encryption for your S3 buckets to protect against unauthorized access to your data at rest.",howto:['Step 1: Sign in to the AWS Management Console by navigating to https://aws.amazon.com/ and clicking on the "Sign in to the Console" button in the upper right corner. Sign in using your AWS credentials.','Step 2: In the AWS Management Console dashboard, find the "Services" dropdown in the top left corner and click on it. In the "Storage" category, click on "S3" to open the Amazon S3 Console.',"Step 3: In the Amazon S3 Console, locate the bucket for which you want to enable encryption and click on its name to open the bucket details.",'Step 4: Click on the "Properties" tab in the bucket details view.','Step 5: In the "Properties" tab, find the "Default encryption" card. Click on the "Edit" button in the top right corner of the card. In the "Default encryption configuration" section that appears, select the "AES-256" option or the "AWS KMS-managed key" option. You can also choose to enable encryption for objects that are uploaded without encryption.','Step 6: Click on the "Save changes" button to save your encryption configuration.']},{item:"Create IAM policies",description:"Use IAM policies to control access to your S3 buckets and objects.",howto:['Step 1: Sign in to the AWS Management Console by navigating to https://aws.amazon.com/ and clicking on the "Sign in to the Console" button in the upper right corner. Sign in using your AWS credentials.','Step 2: In the AWS Management Console dashboard, find the "Services" dropdown in the top left corner and click on it. In the "Security, Identity & Compliance" category, click on "IAM" to open the AWS Identity and Access Management (IAM) Console.','Step 3: In the IAM Console, navigate to the "Policies" section and click on the "Create policy" button.','Step 4: In the "Create policy" page, select the type of policy that you want to create (e.g. a JSON policy) and specify the policy details, such as the policy name, description, and permissions. You can use the AWS Policy Generator tool to help you create the policy.','Step 5: Review and validate the policy details, and then click on the "Create policy" button to save your policy.',"Step 6: Associate the policy with the appropriate IAM users, groups, or roles to grant them the required permissions to access your S3 buckets and objects."]},{item:"Enable object lock",description:"Enable object lock to prevent objects from being deleted or overwritten for a defined retention period.",howto:["Step 1: Open the Amazon S3 Console.","Step 2: Select the bucket for which you want to enable object lock.",'Step 3: Click on the "Properties" tab.','Step 4: Click on the "Object lock" card.','Step 5: In the "Object lock" configuration page, select the retention mode (e.g. governance or compliance) and specify the retention period.','Step 6: Click on the "Save changes" button to save your object lock configuration.']},{item:"Enable bucket logging",description:"Enable access logging on your S3 buckets to monitor and analyze access patterns and identify potential security risks.",howto:["Step 1: Open the Amazon S3 Console.","Step 2: Select the bucket for which you want to enable logging.",'Step 3: Click on the "Properties" tab.','Step 4: Click on the "Server access logging" card.','Step 5: In the "Server access logging" configuration page, select the target bucket and prefix for your access logs.','Step 6: Click on the "Save changes" button to save your logging configuration.']},{item:"Enable CloudTrail integration",description:"Integrate your S3 buckets with AWS CloudTrail to capture and store data events for auditing and compliance purposes.",howto:["Step 1: Open the AWS Management Console and navigate to the CloudTrail service.",'Step 2: Click on the "Trails" tab and then click on the "Create trail" button.',"Step 3: Specify the details of your trail, such as the name, S3 bucket, and SNS topic for notifications.",'Step 4: In the "Data events" section, enable logging for S3 data events.','Step 5: Click on the "Create" button to create your trail and start capturing S3 data events.']},{item:"Enable AWS Config",description:"Enable AWS Config to continuously monitor and record your S3 bucket configurations and evaluate them against best practices.",howto:["Step 1: Open the AWS Management Console and navigate to the AWS Config service.",'Step 2: Click on the "Rules" tab and then click on the "Add rule" button.',"Step 3: Select the S3 bucket configuration rule that you want to add and specify the parameters for the rule.",'Step 4: Click on the "Save" button to save your rule configuration.','Step 5: Click on the "Resources" tab and then click on the "Discover resources" button to start discovering S3 resources.',"Step 6: Review the compliance status of your S3 buckets in the AWS Config dashboard."]},{item:"Set up S3 event notifications",description:"Configure S3 event notifications to send messages when specific events occur in your S3 buckets, such as object creation or deletion.",howto:["Step 1: Open the Amazon S3 Console.","Step 2: Select the bucket for which you want to set up event notifications.",'Step 3: Click on the "Properties" tab.','Step 4: Click on the "Events" card.','Step 5: Click on the "Add notification" button to create a new notification configuration.',"Step 6: Select the type of event that you want to receive notifications for (e.g. object creation, deletion, or restoration).","Step 7: Choose the target destination for your notifications (e.g. an SNS topic or an SQS queue).","Step 8: Specify the details of your notification configuration, such as the prefix or suffix filter for your objects.",'Step 9: Click on the "Save changes" button to save your notification configuration.']},{item:"Implement bucket policies",description:"Use S3 bucket policies to manage permissions at the bucket level, controlling access to all objects within a bucket.",howto:["Step 1: Open the Amazon S3 Console.","Step 2: Select the bucket for which you want to implement a bucket policy.",'Step 3: Click on the "Permissions" tab.','Step 4: Click on the "Bucket policy" button to open the Bucket policy editor.',"Step 5: Write or paste the JSON policy document that defines the permissions you want to grant or restrict. You can use the AWS Policy Generator tool to help you create the policy.",'Step 6: Review and validate your policy document, and then click on the "Save" button to save your bucket policy.']},{item:"Set up CORS configurations",description:"Configure Cross-Origin Resource Sharing (CORS) to control which origins can access your S3 buckets and objects.",howto:["Step 1: Open the Amazon S3 Console.","Step 2: Select the bucket for which you want to set up CORS configurations.",'Step 3: Click on the "Permissions" tab.','Step 4: Click on the "CORS configuration" button to open the CORS editor.',"Step 5: Write or paste the XML document that defines the CORS rules you want to set. You can use the AWS CORS Configuration Tool to help you create the document.",'Step 6: Review and validate your CORS document, and then click on the "Save" button to save your CORS configuration.']},{item:"Enable MFA Delete",description:"Enable Multi-Factor Authentication (MFA) Delete to require additional authentication when deleting objects or changing bucket versioning settings.",howto:["Step 1: Open the Amazon S3 Console.","Step 2: Select the bucket for which you want to enable MFA Delete.",'Step 3: Click on the "Properties" tab.','Step 4: Click on the "Versioning" card.','Step 5: Click on the "Edit" button to enable MFA Delete.',"Step 6: Choose the MFA device that you want to associate with your bucket. You will need to have an MFA device that is compatible with your AWS account to complete this step.",'Step 7: Click on the "Save" button to save your MFA Delete configuration.']},{item:"Enable transfer acceleration",description:"Enable S3 Transfer Acceleration to improve data transfer speed and reduce latency for your S3 buckets.",howto:["Step 1: Open the Amazon S3 Console.","Step 2: Select the bucket for which you want to enable S3 Transfer Acceleration.",'Step 3: Click on the "Properties" tab.','Step 4: Click on the "Transfer acceleration" card.','Step 5: Click on the "Edit" button to enable Transfer Acceleration.',"Step 6: Choose the endpoint for your accelerated transfer. You can use the default endpoint or create a custom endpoint.",'Step 7: Click on the "Save" button to save your Transfer Acceleration configuration.']},{item:"Implement bucket tagging",description:"Use bucket tagging to organize and manage your S3 buckets and enable cost allocation tracking.",howto:["Step 1: Open the Amazon S3 Console.","Step 2: Select the bucket for which you want to implement bucket tagging.",'Step 3: Click on the "Properties" tab.','Step 4: Click on the "Tags" card.','Step 5: Click on the "Add tag" button to create a new tag.','Step 6: Enter the key-value pair for your tag. For example, you might use a key of "Environment" and a value of "Production".','Step 7: Click on the "Save" button to save your tag.',"Step 8: Repeat steps 5-7 to add additional tags as needed."]},{item:"Configure lifecycle policies",description:"Set up lifecycle policies to automate the management of objects in your S3 buckets, such as transitioning objects to different storage classes or deleting objects.",howto:["Step 1: Open the Amazon S3 Console.","Step 2: Select the bucket for which you want to configure lifecycle policies.",'Step 3: Click on the "Management" tab.','Step 4: Click on the "Create lifecycle rule" button.','Step 5: Choose a name for your lifecycle rule and click on the "Next" button.',"Step 6: Choose the objects to which the rule will apply. You can choose to apply the rule to all objects in the bucket, or you can use filters to select specific objects.","Step 7: Choose the actions that you want the rule to perform on the selected objects. For example, you might choose to transition objects to a different storage class after a certain amount of time.","Step 8: Choose the timing for the rule. You can choose to start the rule immediately or schedule it to start at a later time.",'Step 9: Click on the "Create rule" button to save your lifecycle rule.']},{item:"Implement public access blocking",description:"Use S3 Block Public Access settings to prevent public access to your S3 buckets and objects.",howto:["Step 1: Open the Amazon S3 Console.","Step 2: Select the bucket for which you want to implement public access blocking.",'Step 3: Click on the "Permissions" tab.','Step 4: Click on the "Block public access" button.',"Step 5: Set the block public access settings to your desired configuration. You can choose to block public access to buckets and objects, block public access to buckets and objects that have public ACLs, block public access to buckets and objects that have public policies, or block public and cross-account access to buckets and objects.",'Step 6: Click on the "Save" button to save your block public access settings.']},{item:"Use VPC endpoints",description:"Create VPC endpoints for Amazon S3 to securely access your buckets over a private network connection.",howto:["Step 1: Open the Amazon VPC Console.",'Step 2: Create a VPC endpoint for Amazon S3. You can do this by clicking on the "Endpoints" tab in the VPC dashboard and then clicking on the "Create Endpoint" button.',"Step 3: Choose the VPC for which you want to create the endpoint.",'Step 4: Choose the service name for the endpoint. For Amazon S3, the service name is "com.amazonaws.region.s3". Replace "region" with the region code for your S3 bucket.',"Step 5: Choose the route table for the endpoint. This is the route table that contains the subnet(s) that you want to use to access your S3 bucket.","Step 6: Choose the security group for the endpoint. This is the security group that controls inbound and outbound traffic to and from the endpoint.",'Step 7: Click on the "Create Endpoint" button to create your VPC endpoint for Amazon S3.',"Step 8: Update your S3 bucket policies to allow access from your VPC endpoint. You can do this by adding a statement to your bucket policy that allows access from the IP address range of your VPC endpoint."]}]}},118:function(e){e.exports={value:"sns",label:"SNS",checklist:[{item:"Enable access logging",description:"Enable access logs for SNS to monitor access and provide audit trails.",howto:["Step 1: Open the Amazon SNS console and navigate to the SNS topic for which you want to enable access logging.",'Step 2: Click on the "Edit" button for the selected topic and select the "Access logging" tab.','Step 3: Enable access logging by selecting the appropriate options and clicking on the "Save" button.']},{item:"Enable server-side encryption",description:"Enable server-side encryption for SNS to protect against unauthorized access to your data.",howto:["Step 1: Open the Amazon SNS console and navigate to the SNS topic for which you want to enable server-side encryption.",'Step 2: Click on the "Edit" button for the selected topic and select the "Encryption" tab.','Step 3: Enable server-side encryption by selecting the appropriate options and clicking on the "Save" button.']},{item:"Use IAM policies to control access",description:"Use IAM policies to control access to your SNS topics and prevent unauthorized access.",howto:["Step 1: Open the Amazon SNS console and navigate to the SNS topic for which you want to configure IAM policies.",'Step 2: Click on the "Edit" button for the selected topic and select the "Access policy" tab.','Step 3: Create or modify the IAM policy to control access to the SNS topic and click on the "Save" button.']},{item:"Enable VPC Endpoints",description:"Use VPC Endpoints for SNS to allow your applications to send messages to SNS over a private network.",howto:["Step 1: Open the Amazon VPC console and navigate to the VPC for which you want to create an endpoint.",'Step 2: Click on the "Endpoints" tab and select "Create Endpoint".','Step 3: Configure the endpoint settings for SNS and click on the "Create Endpoint" button.']},{item:"Enable SNS message filtering",description:"Use SNS message filtering to ensure that subscribers receive only the messages they are interested in.",howto:["Step 1: Open the Amazon SNS console and navigate to the SNS topic for which you want to configure message filtering.",'Step 2: Click on the "Edit" button for the selected topic and select the "Filter policy" tab.','Step 3: Create or modify the filter policy to ensure that subscribers receive only the messages they are interested in and click on the "Save" button.']},{item:"Rotate access keys regularly",description:"Rotate SNS access keys regularly to reduce the risk of unauthorized access.",howto:["Step 1: Open the Amazon SNS console and navigate to the SNS topic for which you want to rotate access keys.",'Step 2: Click on the "Edit" button for the selected topic and select the "Access control" tab.',"Step 3: Rotate the access keys by creating new access keys and deleting the old ones."]},{item:"Enable CloudTrail logging",description:"Enable CloudTrail logging for SNS to monitor and audit API calls and detect suspicious activity.",howto:["Step 1: Open the AWS Management Console and navigate to the CloudTrail service.",'Step 2: Click on the "Trails" menu option in the left-hand navigation pane.','Step 3: Click the "Create Trail" button and specify a name for the trail.',"Step 4: Select the SNS service and choose the specific SNS topics for which you want to enable logging.","Step 5: Specify a S3 bucket where the logs should be stored.","Step 6: Enable log file validation to ensure that the logs have not been tampered with.","Step 7: Choose the CloudTrail permissions that should be granted to SNS.",'Step 8: Review the trail settings and click the "Create" button to enable CloudTrail logging for SNS.']}]}},119:function(e){e.exports={value:"vpc",label:"VPC",checklist:[{item:"Create a VPC with multiple subnets",description:"Design your VPC with multiple subnets spread across multiple Availability Zones to ensure high availability and fault tolerance.",howto:['Step 1: Open the Amazon VPC console and click on "Your VPCs" in the navigation pane.','Step 2: Click on the "Create VPC" button.',"Step 3: Fill in the necessary information, such as VPC name, CIDR block, and other options.","Step 4: Create multiple subnets in different Availability Zones within your VPC, to ensure high availability and fault tolerance."]},{item:"Use Security Groups and Network ACLs",description:"Use Security Groups and Network ACLs to define inbound and outbound traffic rules for your VPC resources, ensuring that only necessary traffic is allowed.",howto:['Step 1: Open the Amazon VPC console and click on "Security Groups" or "Network ACLs" in the navigation pane.','Step 2: Choose the appropriate resource and click on "Create Security Group" or "Create Network ACL".',"Step 3: Define inbound and outbound rules, allowing only necessary traffic.","Step 4: Apply the Security Group or Network ACL to your VPC resources."]},{item:"Implement Private and Public Subnets",description:"Segregate resources within your VPC into private and public subnets based on their exposure to the internet. Keep critical resources in private subnets with no direct internet access.",howto:["Step 1: Create a public subnet with a route to an Internet Gateway to allow resources in the subnet to access the internet.","Step 2: Create a private subnet with a route to a NAT Gateway to allow resources in the subnet to access the internet while still preventing inbound traffic from the internet.","Step 3: Place critical resources, such as databases or application servers, in the private subnet with no direct internet access."]},{item:"Use NAT Gateways for outbound traffic",description:"Use NAT Gateways to allow instances in private subnets to access the internet while still preventing inbound traffic from the internet.",howto:["Step 1: Create a NAT Gateway in the public subnet.","Step 2: Modify the route table for the private subnet to include a route to the NAT Gateway.","Step 3: Configure your instances in the private subnet to use the NAT Gateway for outbound traffic."]},{item:"Use VPC Flow Logs",description:"Enable VPC Flow Logs to capture information about the IP traffic going to and from network interfaces in your VPC for monitoring and auditing purposes.",howto:['Step 1: Open the Amazon VPC console and navigate to "Flow Logs".','Step 2: Click on the "Create Flow Log" button.',"Step 3: Choose the appropriate configuration options, such as the VPC or subnet to capture traffic from, and the destination for the flow log data.","Step 4: Enable the flow log."]},{item:"Use VPC endpoints for AWS services",description:"Use VPC endpoints to privately connect your VPC to supported AWS services, ensuring that traffic between your VPC and these services does not traverse the public internet.",howto:["Step 1: Open the Amazon VPC console and navigate to the Endpoints tab.","Step 2: Create a new VPC Endpoint or edit an existing one.","Step 3: Configure the VPC Endpoint to connect to the desired AWS service."]},{item:"Implement proper routing",description:"Configure routing tables for each subnet in your VPC, ensuring that traffic is routed only to intended destinations.",howto:["Step 1: Open the Amazon VPC console and navigate to the Route Tables tab.","Step 2: Create a new Route Table or edit an existing one.","Step 3: Configure the routing rules for your Route Table."]},{item:"Use VPN or Direct Connect for hybrid environments",description:"If connecting your VPC to on-premises environments, use AWS VPN or Direct Connect for secure and reliable connectivity.",howto:["Step 1: Set up a VPN connection between your on-premises environment and your VPC using the AWS VPN CloudHub or AWS Site-to-Site VPN.","Step 2: Configure the virtual private gateway to ensure that all traffic between your VPC and your on-premises network is encrypted and secure.","Step 3: If using AWS Direct Connect, work with an AWS Direct Connect partner to establish a dedicated network connection between your on-premises environment and your VPC.","Step 4: Ensure that your on-premises network is configured to allow traffic to flow between your VPC and your on-premises resources."]},{item:"Periodically review Security Groups and Network ACLs",description:"Regularly review and update your Security Groups and Network ACLs to ensure that they continue to meet your security requirements and follow the principle of least privilege.",howto:["Step 1: Open the Amazon VPC console.","Step 2: In the left navigation pane, choose 'Security Groups' or 'Network ACLs', depending on which you want to review.","Step 3: Select the resource you want to review, and then choose the 'Inbound Rules' or 'Outbound Rules' tab, depending on which direction you want to review.","Step 4: Review the rules and update them as necessary to ensure that only necessary traffic is allowed."]},{item:"Encrypt sensitive data",description:"Encrypt sensitive data in transit and at rest when transmitted between your VPC and other networks, or stored within your VPC.",howto:["Step 1: Identify the sensitive data that needs to be encrypted.","Step 2: Use AWS Key Management Service (KMS) to create a customer master key (CMK) for encrypting the sensitive data.","Step 3: Apply the CMK to the resources that contain the sensitive data, such as Amazon S3 buckets or EBS volumes.","Step 4: Configure SSL/TLS encryption for all traffic going in and out of your VPC."]},{item:"Implement proper IAM policies",description:"Use IAM policies to control access to VPC resources and actions, ensuring that users and applications have only the necessary permissions.",howto:["Step 1: Identify the resources that need to be secured.","Step 2: Create IAM policies that define the necessary permissions for each resource.","Step 3: Create IAM roles and groups that apply the policies to the appropriate users and resources.","Step 4: Regularly review and update the policies and roles to ensure that they continue to meet your security requirements and follow the principle of least privilege."]}]}},148:function(e,t,o){"use strict";o.r(t);var n=o(0),a=o.n(n),i=o(64),r=o.n(i),s=(o(89),o(19)),c=o(11),u=o(12),l=o(22),p=(o(90),o(69)),d=o(177),h=o(178),y=o(180),m=o(181),S=o(182),g=o(183),f=o(184),b=o(185),v=o(191),w=o(189),A=o(186),C=o(187),k=o(188),E=o(190),W=o(150),I=o(57),M=(o(91),o(68)),U=o.n(M);function z(){z=function(){return e};var e={},t=Object.prototype,o=t.hasOwnProperty,n=Object.defineProperty||function(e,t,o){e[t]=o.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",r=a.asyncIterator||"@@asyncIterator",s=a.toStringTag||"@@toStringTag";function c(e,t,o){return Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},"")}catch(M){c=function(e,t,o){return e[t]=o}}function u(e,t,o,a){var i=t&&t.prototype instanceof d?t:d,r=Object.create(i.prototype),s=new E(a||[]);return n(r,"_invoke",{value:w(e,o,s)}),r}function l(e,t,o){try{return{type:"normal",arg:e.call(t,o)}}catch(M){return{type:"throw",arg:M}}}e.wrap=u;var p={};function d(){}function h(){}function y(){}var m={};c(m,i,function(){return this});var S=Object.getPrototypeOf,g=S&&S(S(W([])));g&&g!==t&&o.call(g,i)&&(m=g);var f=y.prototype=d.prototype=Object.create(m);function b(e){["next","throw","return"].forEach(function(t){c(e,t,function(e){return this._invoke(t,e)})})}function v(e,t){var a;n(this,"_invoke",{value:function(n,i){function r(){return new t(function(a,r){!function n(a,i,r,s){var c=l(e[a],e,i);if("throw"!==c.type){var u=c.arg,p=u.value;return p&&"object"==typeof p&&o.call(p,"__await")?t.resolve(p.__await).then(function(e){n("next",e,r,s)},function(e){n("throw",e,r,s)}):t.resolve(p).then(function(e){u.value=e,r(u)},function(e){return n("throw",e,r,s)})}s(c.arg)}(n,i,a,r)})}return a=a?a.then(r,r):r()}})}function w(e,t,o){var n="suspendedStart";return function(a,i){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===a)throw i;return I()}for(o.method=a,o.arg=i;;){var r=o.delegate;if(r){var s=A(r,o);if(s){if(s===p)continue;return s}}if("next"===o.method)o.sent=o._sent=o.arg;else if("throw"===o.method){if("suspendedStart"===n)throw n="completed",o.arg;o.dispatchException(o.arg)}else"return"===o.method&&o.abrupt("return",o.arg);n="executing";var c=l(e,t,o);if("normal"===c.type){if(n=o.done?"completed":"suspendedYield",c.arg===p)continue;return{value:c.arg,done:o.done}}"throw"===c.type&&(n="completed",o.method="throw",o.arg=c.arg)}}}function A(e,t){var o=t.method,n=e.iterator[o];if(void 0===n)return t.delegate=null,"throw"===o&&e.iterator.return&&(t.method="return",t.arg=void 0,A(e,t),"throw"===t.method)||"return"!==o&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+o+"' method")),p;var a=l(n,e.iterator,t.arg);if("throw"===a.type)return t.method="throw",t.arg=a.arg,t.delegate=null,p;var i=a.arg;return i?i.done?(t[e.resultName]=i.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,p):i:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,p)}function C(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function k(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function E(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(C,this),this.reset(!0)}function W(e){if(e){var t=e[i];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,a=function t(){for(;++n<e.length;)if(o.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return a.next=a}}return{next:I}}function I(){return{value:void 0,done:!0}}return h.prototype=y,n(f,"constructor",{value:y,configurable:!0}),n(y,"constructor",{value:h,configurable:!0}),h.displayName=c(y,s,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===h||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,c(e,s,"GeneratorFunction")),e.prototype=Object.create(f),e},e.awrap=function(e){return{__await:e}},b(v.prototype),c(v.prototype,r,function(){return this}),e.AsyncIterator=v,e.async=function(t,o,n,a,i){void 0===i&&(i=Promise);var r=new v(u(t,o,n,a),i);return e.isGeneratorFunction(o)?r:r.next().then(function(e){return e.done?e.value:r.next()})},b(f),c(f,s,"Generator"),c(f,i,function(){return this}),c(f,"toString",function(){return"[object Generator]"}),e.keys=function(e){var t=Object(e),o=[];for(var n in t)o.push(n);return o.reverse(),function e(){for(;o.length;){var n=o.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},e.values=W,E.prototype={constructor:E,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(k),!e)for(var t in this)"t"===t.charAt(0)&&o.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(o,n){return r.type="throw",r.arg=e,t.next=o,n&&(t.method="next",t.arg=void 0),!!n}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],r=i.completion;if("root"===i.tryLoc)return n("end");if(i.tryLoc<=this.prev){var s=o.call(i,"catchLoc"),c=o.call(i,"finallyLoc");if(s&&c){if(this.prev<i.catchLoc)return n(i.catchLoc,!0);if(this.prev<i.finallyLoc)return n(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return n(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return n(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&o.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var i=a;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var r=i?i.completion:{};return r.type=e,r.arg=t,i?(this.method="next",this.next=i.finallyLoc,p):this.complete(r)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),p},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var o=this.tryEntries[t];if(o.finallyLoc===e)return this.complete(o.completion,o.afterLoc),k(o),p}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var o=this.tryEntries[t];if(o.tryLoc===e){var n=o.completion;if("throw"===n.type){var a=n.arg;k(o)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,o){return this.delegate={iterator:W(e),resultName:t,nextLoc:o},"next"===this.method&&(this.arg=void 0),p}},e}var P=Object(d.a)({select:{marginBottom:"16px"},tableColumn:{marginBottom:"16px"},tableRow:{height:"10px"},tableRowButton:{width:"100%",padding:4,textAlign:"left"},tableCell:{width:"100%",textAlign:"center",cursor:"pointer","&:hover":{backgroundColor:"#EEE"}},tableCellHover:{backgroundColor:"#EEE"}});var L=function(){var e=Object(n.useState)([]),t=Object(l.a)(e,2),i=t[0],r=t[1],d=Object(n.useState)([]),M=Object(l.a)(d,2),L=M[0],R=M[1],T=P(),O=Object(n.useState)([]),x=Object(l.a)(O,2),D=x[0],V=x[1],B=Object(n.useState)(!1),N=Object(l.a)(B,2),j=N[0],F=N[1],Q=Object(n.useState)(null),q=Object(l.a)(Q,2),G=q[0],K=q[1],_=function(e){return e.keys().map(function(t){return Object(u.a)({},e(t),{fileName:t.replace("./","").replace(".json","")})})},Z=function(e){K(e),F(!0)},H=function(){F(!1)};return Object(n.useEffect)(function(){!function(){var e=Object(s.a)(z().mark(function e(){var t,n;return z().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:t=o(92),n=_(t),R(n),V(new Array(n.length).fill(!1));case 4:case"end":return e.stop()}},e)}));return function(){return e.apply(this,arguments)}}()()},[]),a.a.createElement("div",{className:"App"},a.a.createElement("h1",null,"AWS Security Checklist"),a.a.createElement(p.a,{options:L,onChange:function(e){r(e)},isMulti:!0,value:i,placeholder:"Select AWS Services",className:T.select}),a.a.createElement("div",null,i&&i.map(function(e,t){return a.a.createElement("div",{key:t,className:T.tableColumn},a.a.createElement(h.a,{component:y.a},a.a.createElement(m.a,{className:T.table},a.a.createElement(S.a,null,a.a.createElement(g.a,{className:T.tableRow},a.a.createElement(f.a,{style:{backgroundColor:"#FF9900",textAlign:"center"}},a.a.createElement("strong",null,e.label)))),a.a.createElement(b.a,null,e.checklist.slice(0,2).map(function(e,t){return a.a.createElement(g.a,{key:t,className:T.tableRow,onClick:function(){return Z(e)}},a.a.createElement(f.a,{className:T.tableCell,component:"th",scope:"row",style:{width:"100%",textAlign:"center",cursor:"pointer"},hover:{backgroundColor:"#EEE"}},e.item))}),D[t]&&e.checklist.slice(2).map(function(e,t){return a.a.createElement(g.a,{key:t+2,className:T.tableRow,onClick:function(){return Z(e)}},a.a.createElement(f.a,{className:T.tableCell,component:"th",scope:"row",style:{width:"100%",textAlign:"center",cursor:"pointer"},hover:{backgroundColor:"#EEE"}},e.item))}))),e.checklist.length>3&&a.a.createElement(v.a,{style:{width:"100%",display:"flex",justifyContent:"center",color:"#2196F3",fontSize:"0.7rem"},variant:"text",onClick:function(){return function(e){var t=Object(c.a)(D);t[e]=!t[e],V(t)}(t)}},D[t]?"...Show less":"...Show more")))}),i&&i.length>0&&a.a.createElement(v.a,{fullWidth:!0,variant:"contained",color:"primary",onClick:function(){var e=new I.jsPDF;e.setFontSize(18),e.text("AWS Security Checklist Report",14,22),e.setFontSize(12),i.forEach(function(t,o){0!==o&&e.addPage(),e.setFontSize(14),e.setTextColor(0,0,0),e.text("AWS Security Checklist - ".concat(t.label),14,30);var n=t.checklist.map(function(e){return[e.item,e.description]});e.autoTable({startY:40,head:[["Item","Description"]],body:n,theme:"grid",tableWidth:"auto",headStyles:{fillColor:[255,153,0]},didDrawPage:function(t){e.setFontSize(10),e.setTextColor(0,0,255);var o="This report has been generated by ",n=e.getStringUnitWidth("This report has been generated by awscheck.fyi")*e.internal.getFontSize()/e.internal.scaleFactor,a=(e.internal.pageSize.width-n)/2,i=e.internal.pageSize.height-8;e.text(o,a,i),e.textWithLink("awscheck.fyi",a+e.getStringUnitWidth(o)*e.internal.getFontSize()/e.internal.scaleFactor,i,{url:"http://www.awscheck.fyi/"})}})}),e.save("aws_security_checklist_report.pdf")},style:{margin:"16px 0",backgroundColor:"#2196F3"}},"Download Full Checklist")),a.a.createElement(w.a,{onClose:H,open:j,maxWidth:"lg"},a.a.createElement(A.a,{style:{textAlign:"center",backgroundColor:"#FF9900",color:"white",padding:"16px",fontWeight:"bold"}},G&&G.item),a.a.createElement(C.a,{style:{padding:"24px"}},a.a.createElement("div",{style:{textAlign:"center",marginBottom:"24px",fontStyle:"italic"}},G&&G.description),a.a.createElement("div",{style:{textAlign:"left",marginBottom:"16px"}},a.a.createElement("strong",null,"How to ",G&&G.item,":")),a.a.createElement("div",{style:{textAlign:"left"}},a.a.createElement("ul",null,G&&G.howto.map(function(e,t){var o=e.split(/(:\s+)/);return a.a.createElement(a.a.Fragment,null,a.a.createElement("li",{key:t},a.a.createElement("strong",null,o[0]),o[1],o[2]),a.a.createElement("br",null))})),a.a.createElement(k.a,{style:{justifyContent:"center",padding:"5px",marginTop:"1px"}},a.a.createElement(v.a,{onClick:H,variant:"contained",color:"primary",startIcon:a.a.createElement(U.a,null)},"Close"))))),a.a.createElement("footer",{style:{textAlign:"center",marginTop:"15px"}},a.a.createElement(E.a,{sx:{marginTop:4,display:"flex",justifyContent:"center"}},a.a.createElement(W.a,{variant:"body1"},"Made with ",a.a.createElement("span",{role:"img","aria-label":"Thumbs up"},"\u2764\ufe0f")," by ",a.a.createElement("a",{href:"https://www.linkedin.com/in/krushnalipane/"},a.a.createElement("strong",null,"Krushhhh"))))))},R=function(e){e&&e instanceof Function&&o.e(6).then(o.bind(null,370)).then(function(t){var o=t.getCLS,n=t.getFID,a=t.getFCP,i=t.getLCP,r=t.getTTFB;o(e),n(e),a(e),i(e),r(e)})};r.a.createRoot(document.getElementById("root")).render(a.a.createElement(a.a.StrictMode,null,a.a.createElement(L,null))),R()},82:function(e,t,o){e.exports=o(148)},89:function(e,t,o){},90:function(e,t,o){},92:function(e,t,o){var n={"./amazon_aurora.json":93,"./amazon_connect.json":94,"./amazon_eventbridge.json":95,"./amazon_mq.json":96,"./amazon_redshift.json":97,"./amazon_sqs.json":98,"./apigateway.json":99,"./athena.json":100,"./autoscaling.json":101,"./batch.json":102,"./cloudfront.json":103,"./cloudtrail.json":104,"./compute_optimizer.json":105,"./dynamodb.json":106,"./ebs.json":107,"./ec2.json":108,"./ecr.json":109,"./eks.json":110,"./elasticbeanstalk.json":111,"./fargate.json":112,"./lambda.json":113,"./lightsail.json":114,"./localzones.json":115,"./outposts.json":116,"./s3.json":117,"./sns.json":118,"./vpc.json":119};function a(e){var t=i(e);return o(t)}function i(e){var t=n[e];if(!(t+1)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return t}a.keys=function(){return Object.keys(n)},a.resolve=i,e.exports=a,a.id=92},93:function(e){e.exports={value:"amazon_aurora",label:"Amazon Aurora",checklist:[{item:"Encrypt data at rest",description:"Encrypting your Aurora database at rest helps protect your data from unauthorized access or disclosure in the event of theft or loss of your storage devices.",howto:["Step 1: Use AWS KMS (Key Management Service) or a third-party encryption solution to encrypt your Aurora database at rest.","Step 2: Ensure that your Aurora database is set to encrypt by default.","Step 3: Regularly audit your Aurora encryption settings to ensure compliance with your security policies."]},{item:"Encrypt data in transit",description:"Encrypting your Aurora database connections helps protect your data from unauthorized interception or disclosure during transmission.",howto:["Step 1: Use SSL/TLS encryption to secure connections to your Aurora database.","Step 2: Use certificate verification to ensure that clients are communicating with your Aurora database and not an imposter.","Step 3: Regularly audit your Aurora encryption settings to ensure compliance with your security policies."]},{item:"Use secure AWS Identity and Access Management (IAM) policies",description:"Using secure IAM policies helps ensure that access to your Aurora database is limited to authorized users and applications.",howto:["Step 1: Use IAM roles and policies to control access to your Aurora database.","Step 2: Grant access only to the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your Aurora environment."]},{item:"Implement backup and disaster recovery plans",description:"Implementing backup and disaster recovery plans helps ensure that your Aurora database is available and functional during a security breach or other disaster.",howto:["Step 1: Determine your recovery time objective (RTO) and recovery point objective (RPO) for your Aurora database.","Step 2: Use AWS Backup or a third-party backup solution to back up your Aurora database on a regular basis.","Step 3: Use AWS Disaster Recovery or a third-party disaster recovery solution to replicate your Aurora database to another location for disaster recovery purposes.","Step 4: Test your backup and disaster recovery plans regularly to ensure that they work as expected."]},{item:"Monitor Aurora database activity",description:"Monitoring Aurora database activity helps you identify potential security issues or anomalies in your Aurora environment.",howto:["Step 1: Use Amazon CloudWatch to monitor key metrics, such as CPU utilization and database connections, for your Aurora environment.","Step 2: Set up alarms to notify you of any abnormal behavior in your Aurora environment.","Step 3: Use AWS Config and AWS CloudTrail to track changes to your Aurora database and ensure that they are compliant with your security policies."]},{item:"Regularly review and audit security controls",description:"Regularly reviewing and auditing security controls helps ensure that your Aurora resources are secure and compliant with your security policies.",howto:["Step 1: Use AWS Config and AWS CloudTrail to track changes to your Aurora database and ensure that they are compliant with your security policies.","Step 2: Use AWS Security Hub to centrally view and manage your security alerts and compliance status across your Aurora environment.","Step 3: Regularly review and audit your security controls to identify and remediate any security issues."]},{item:"Implement least privilege access",description:"Implementing least privilege access helps ensure that users and applications have only the minimum privileges necessary to perform their intended actions.",howto:["Step 1: Use IAM roles and policies to control access to your Aurora database.","Step 2: Limit access to only the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your Aurora environment."]}]}},94:function(e){e.exports={value:"amazon_connect",label:"Amazon Connect",checklist:[{item:"Enable encryption for Amazon Connect data",description:"Enabling encryption for Amazon Connect data at rest helps protect sensitive information from unauthorized access or disclosure.",howto:["Step 1: Enable Amazon S3 server-side encryption for the S3 buckets used by Amazon Connect.","Step 2: Use AWS KMS (Key Management Service) or a third-party encryption solution to encrypt data at rest in Amazon Connect."]},{item:"Use secure AWS Identity and Access Management (IAM) policies",description:"Using secure IAM policies helps ensure that access to Amazon Connect is limited to authorized users and applications.",howto:["Step 1: Use IAM roles and policies to control access to Amazon Connect resources.","Step 2: Grant access only to the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your Amazon Connect environment."]},{item:"Implement least privilege access",description:"Implementing least privilege access helps ensure that users and applications have only the minimum privileges necessary to perform their intended actions.",howto:["Step 1: Use IAM roles and policies to control access to Amazon Connect.","Step 2: Limit access to only the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your Amazon Connect environment."]},{item:"Regularly review and audit security controls",description:"Regularly reviewing and auditing security controls helps ensure that your Amazon Connect resources are secure and compliant with your security policies.",howto:["Step 1: Use AWS Config and AWS CloudTrail to track changes to your Amazon Connect resources and ensure that they are compliant with your security policies.","Step 2: Use AWS Security Hub to centrally view and manage your security alerts and compliance status across your Amazon Connect environment.","Step 3: Regularly review and audit your security controls to identify and remediate any security issues."]},{item:"Monitor Amazon Connect activity",description:"Monitoring Amazon Connect activity helps you identify potential security issues or anomalies in your Amazon Connect environment.",howto:["Step 1: Use Amazon CloudWatch to monitor key metrics, such as call volume and wait time, for your Amazon Connect environment.","Step 2: Set up alarms to notify you of any abnormal behavior in your Amazon Connect environment.","Step 3: Use AWS Config and AWS CloudTrail to track changes to your Amazon Connect resources and ensure that they are compliant with your security policies."]}]}},95:function(e){e.exports={value:"amazon_eventbridge",label:"Amazon EventBridge",checklist:[{item:"Encrypt data in transit",description:"Encrypting your EventBridge data in transit helps protect your data from unauthorized interception or disclosure during transmission.",howto:["Step 1: Use SSL/TLS encryption to secure connections to your EventBridge resources.","Step 2: Use certificate verification to ensure that clients are communicating with your EventBridge resources and not an imposter.","Step 3: Regularly audit your EventBridge encryption settings to ensure compliance with your security policies."]},{item:"Use secure AWS Identity and Access Management (IAM) policies",description:"Using secure IAM policies helps ensure that access to your EventBridge resources is limited to authorized users and applications.",howto:["Step 1: Use IAM roles and policies to control access to your EventBridge resources.","Step 2: Grant access only to the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your EventBridge environment."]},{item:"Implement monitoring and logging",description:"Implementing monitoring and logging helps you identify potential security issues or anomalies in your EventBridge environment.",howto:["Step 1: Use Amazon CloudWatch to monitor key metrics, such as invocations and error rates, for your EventBridge resources.","Step 2: Set up alarms to notify you of any abnormal behavior in your EventBridge environment.","Step 3: Use AWS CloudTrail to track changes to your EventBridge resources and ensure that they are compliant with your security policies."]},{item:"Regularly review and audit security controls",description:"Regularly reviewing and auditing security controls helps ensure that your EventBridge resources are secure and compliant with your security policies.",howto:["Step 1: Use AWS Config and AWS CloudTrail to track changes to your EventBridge resources and ensure that they are compliant with your security policies.","Step 2: Use AWS Security Hub to centrally view and manage your security alerts and compliance status across your EventBridge environment.","Step 3: Regularly review and audit your security controls to identify and remediate any security issues."]},{item:"Implement least privilege access",description:"Implementing least privilege access helps ensure that users and applications have only the minimum privileges necessary to perform their intended actions.",howto:["Step 1: Use IAM roles and policies to control access to your EventBridge resources.","Step 2: Limit access to only the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your EventBridge environment."]}]}},96:function(e){e.exports={value:"amazon_mq",label:"Amazon MQ",checklist:[{item:"Encrypt data in transit",description:"Encrypting your MQ data in transit helps protect your data from unauthorized interception or disclosure during transmission.",howto:["Step 1: Use SSL/TLS encryption to secure connections to your MQ resources.","Step 2: Use certificate verification to ensure that clients are communicating with your MQ resources and not an imposter.","Step 3: Regularly audit your MQ encryption settings to ensure compliance with your security policies."]},{item:"Use secure AWS Identity and Access Management (IAM) policies",description:"Using secure IAM policies helps ensure that access to your MQ resources is limited to authorized users and applications.",howto:["Step 1: Use IAM roles and policies to control access to your MQ resources.","Step 2: Grant access only to the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your MQ environment."]},{item:"Implement monitoring and logging",description:"Implementing monitoring and logging helps you identify potential security issues or anomalies in your MQ environment.",howto:["Step 1: Use Amazon CloudWatch to monitor key metrics, such as message processing rates and queue depth, for your MQ resources.","Step 2: Set up alarms to notify you of any abnormal behavior in your MQ environment.","Step 3: Use AWS CloudTrail to track changes to your MQ resources and ensure that they are compliant with your security policies."]},{item:"Regularly review and audit security controls",description:"Regularly reviewing and auditing security controls helps ensure that your MQ resources are secure and compliant with your security policies.",howto:["Step 1: Use AWS Config and AWS CloudTrail to track changes to your MQ resources and ensure that they are compliant with your security policies.","Step 2: Use AWS Security Hub to centrally view and manage your security alerts and compliance status across your MQ environment.","Step 3: Regularly review and audit your security controls to identify and remediate any security issues."]},{item:"Implement least privilege access",description:"Implementing least privilege access helps ensure that users and applications have only the minimum privileges necessary to perform their intended actions.",howto:["Step 1: Use IAM roles and policies to control access to your MQ resources.","Step 2: Limit access to only the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your MQ environment."]},{item:"Secure your MQ VPC",description:"Securing your MQ Virtual Private Cloud (VPC) helps protect your MQ resources from unauthorized access and network-based attacks.",howto:["Step 1: Use a dedicated VPC for your MQ resources.","Step 2: Use security groups to control network traffic to and from your MQ resources.","Step 3: Use VPC flow logs to monitor network traffic to and from your MQ resources.","Step 4: Use AWS Shield or a third-party DDoS protection solution to protect your MQ resources against DDoS attacks."]},{item:"Implement backup and recovery",description:"Implementing backup and recovery helps ensure that you can recover your MQ resources and data in the event of a disaster or data loss.",howto:["Step 1: Use Amazon Elastic File System (EFS) or Amazon S3 to back up your MQ data.","Step 2: Use AWS Backup to automate and manage your backups.","Step 3: Regularly test your backups to ensure that you can recover your MQ resources and data in the event of a disaster or data loss."]},{item:"Implement message-level encryption",description:"Implementing message-level encryption helps protect your MQ messages from unauthorized access or disclosure.",howto:["Step 1: Use AWS KMS to encrypt your MQ messages with customer-managed keys.","Step 2: Use envelope encryption to protect your messages with different keys.","Step 3: Regularly audit your encryption settings to ensure compliance with your security policies."]},{item:"Implement message filtering and validation",description:"Implementing message filtering and validation helps protect your MQ resources from malicious or invalid messages.",howto:["Step 1: Use message filtering to filter out messages that do not meet your criteria.","Step 2: Implement message validation to ensure that messages are in the expected format and meet your data validation rules.","Step 3: Use AWS Lambda or other serverless computing services to process and validate messages before they are stored in your MQ."]}]}},97:function(e){e.exports={value:"amazon_redshift",label:"Amazon Redshift",checklist:[{item:"Encrypt data at rest",description:"Encrypting your Redshift data at rest helps protect your data from unauthorized access or disclosure in the event of theft or loss of your storage devices.",howto:["Step 1: Use AWS KMS (Key Management Service) or a third-party encryption solution to encrypt your Redshift data at rest.","Step 2: Ensure that your Redshift cluster is set to encrypt by default.","Step 3: Regularly audit your Redshift encryption settings to ensure compliance with your security policies."]},{item:"Encrypt data in transit",description:"Encrypting your Redshift cluster connections helps protect your data from unauthorized interception or disclosure during transmission.",howto:["Step 1: Use SSL/TLS encryption to secure connections to your Redshift cluster.","Step 2: Use certificate verification to ensure that clients are communicating with your Redshift cluster and not an imposter.","Step 3: Regularly audit your Redshift encryption settings to ensure compliance with your security policies."]},{item:"Use secure AWS Identity and Access Management (IAM) policies",description:"Using secure IAM policies helps ensure that access to your Redshift cluster is limited to authorized users and applications.",howto:["Step 1: Use IAM roles and policies to control access to your Redshift cluster.","Step 2: Grant access only to the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your Redshift environment."]},{item:"Implement backup and disaster recovery plans",description:"Implementing backup and disaster recovery plans helps ensure that your Redshift cluster is available and functional during a security breach or other disaster.",howto:["Step 1: Determine your recovery time objective (RTO) and recovery point objective (RPO) for your Redshift cluster.","Step 2: Use AWS Backup or a third-party backup solution to back up your Redshift cluster on a regular basis.","Step 3: Use AWS Disaster Recovery or a third-party disaster recovery solution to replicate your Redshift cluster to another location for disaster recovery purposes.","Step 4: Test your backup and disaster recovery plans regularly to ensure that they work as expected."]},{item:"Monitor Redshift cluster activity",description:"Monitoring Redshift cluster activity helps you identify potential security issues or anomalies in your Redshift environment.",howto:["Step 1: Use Amazon CloudWatch to monitor key metrics, such as disk space usage and CPU utilization, for your Redshift cluster.","Step 2: Set up alarms to notify you of any abnormal behavior in your Redshift environment.","Step 3: Use AWS Config and AWS CloudTrail to track changes to your Redshift cluster and ensure that they are compliant with your security policies."]},{item:"Regularly review and audit security controls",description:"Regularly reviewing and auditing security controls helps ensure that your Redshift resources are secure and compliant with your security policies.",howto:["Step 1: Use AWS Config and AWS CloudTrail to track changes to your Redshift cluster and ensure that they are compliance with your security policies.","Step 2: Use AWS Security Hub to centrally view and manage your security alerts and compliance status across your Redshift environment.","Step 3: Regularly review and audit your security controls to identify and remediate any security issues."]},{item:"Implement least privilege access",description:"Implementing least privilege access helps ensure that users and applications have only the minimum privileges necessary to perform their intended actions.",howto:["Step 1: Use IAM roles and policies to control access to your Redshift cluster.","Step 2: Limit access to only the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your Redshift environment."]},{item:"Secure your Redshift VPC",description:"Securing your Redshift Virtual Private Cloud (VPC) helps protect your Redshift cluster from unauthorized access and network-based attacks.",howto:["Step 1: Use a dedicated VPC for your Redshift cluster.","Step 2: Use security groups to control network traffic to and from your Redshift cluster.","Step 3: Use VPC flow logs to monitor network traffic to and from your Redshift cluster.","Step 4: Use AWS Shield or a third-party DDoS protection solution to protect your Redshift cluster against DDoS attacks."]},{item:"Implement network security best practices",description:"Implementing network security best practices helps ensure that your Redshift cluster is protected from network-based attacks and threats.",howto:["Step 1: Implement secure network architecture for your Redshift cluster.","Step 2: Use VPC peering to establish secure connections between your Redshift cluster and other VPCs.","Step 3: Use network access control lists (ACLs) to control network traffic to and from your Redshift cluster.","Step 4: Use AWS WAF (Web Application Firewall) or a third-party web application firewall to protect your Redshift cluster against web-based attacks."]}]}},98:function(e){e.exports={value:"amazon_sqs",label:"Amazon SQS",checklist:[{item:"Encrypt data in transit",description:"Encrypting your SQS data in transit helps protect your data from unauthorized interception or disclosure during transmission.",howto:["Step 1: Use SSL/TLS encryption to secure connections to your SQS resources.","Step 2: Use certificate verification to ensure that clients are communicating with your SQS resources and not an imposter.","Step 3: Regularly audit your SQS encryption settings to ensure compliance with your security policies."]},{item:"Use secure AWS Identity and Access Management (IAM) policies",description:"Using secure IAM policies helps ensure that access to your SQS resources is limited to authorized users and applications.",howto:["Step 1: Use IAM roles and policies to control access to your SQS resources.","Step 2: Grant access only to the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your SQS environment."]},{item:"Implement monitoring and logging",description:"Implementing monitoring and logging helps you identify potential security issues or anomalies in your SQS environment.",howto:["Step 1: Use Amazon CloudWatch to monitor key metrics, such as message processing rates and queue depth, for your SQS resources.","Step 2: Set up alarms to notify you of any abnormal behavior in your SQS environment.","Step 3: Use AWS CloudTrail to track changes to your SQS resources and ensure that they are compliant with your security policies."]},{item:"Regularly review and audit security controls",description:"Regularly reviewing and auditing security controls helps ensure that your SQS resources are secure and compliant with your security policies.",howto:["Step 1: Use AWS Config and AWS CloudTrail to track changes to your SQS resources and ensure that they are compliant with your security policies.","Step 2: Use AWS Security Hub to centrally view and manage your security alerts and compliance status across your SQS environment.","Step 3: Regularly review and audit your security controls to identify and remediate any security issues."]},{item:"Implement least privilege access",description:"Implementing least privilege access helps ensure that users and applications have only the minimum privileges necessary to perform their intended actions.",howto:["Step 1: Use IAM roles and policies to control access to your SQS resources.","Step 2: Limit access to only the users and applications that require it.","Step 3: Use AWS CloudTrail to monitor and log user activity in your SQS environment."]},{item:"Secure your SQS VPC",description:"Securing your SQS Virtual Private Cloud (VPC) helps protect your SQS resources from unauthorized access and network-based attacks.",howto:["Step 1: Use a dedicated VPC for your SQS resources.","Step 2: Use security groups to control network traffic to and from your SQS resources.","Step 3: Use VPC flow logs to monitor network traffic to and from your SQS resources.","Step 4: Use AWS Shield or a third-party DDoS protection solution to protect your SQS resources against DDoS attacks."]},{item:"Implement retention policies for your SQS messages",description:"Implementing retention policies helps ensure that your SQS messages are stored securely and in compliance with your security policies.",howto:["Step 1: Use Amazon S3 to store your SQS messages for long-term retention.","Step 2: Use AWS Key Management Service (KMS) to encrypt your SQS messages at rest.","Step 3: Implement lifecycle policies for your S3 bucket to automatically delete or archive messages that are no longer needed.","Step 4: Regularly audit your retention policies to ensure compliance with your security policies."]},{item:"Implement message-level encryption",description:"Implementing message-level encryption helps protect your SQS messages from unauthorized access or disclosure.",howto:["Step 1: Use AWS KMS to encrypt your SQS messages with customer-managed keys.","Step 2: Use envelope encryption to protect your messages with different keys.","Step 3: Regularly audit your encryption settings to ensure compliance with your security policies."]},{item:"Implement message filtering and validation",description:"Implementing message filtering and validation helps protect your SQS resources from malicious or invalid messages.",howto:["Step 1: Use message filtering to filter out messages that do not meet your criteria.","Step 2: Implement message validation to ensure that messages are in the expected format and meet your data validation rules.","Step 3: Use AWS Lambda or other serverless computing services to process and validate messages before they are stored in your SQS queue."]}]}},99:function(e){e.exports={value:"apigateway",label:"API Gateway",checklist:[{item:"Use HTTPS",description:"Use HTTPS instead of HTTP for all API requests to encrypt data in transit and prevent man-in-the-middle attacks.",howto:["Step 1: Acquire an SSL certificate for your domain name.","Step 2: Configure your API Gateway to use HTTPS by creating a custom domain name and associating it with an SSL certificate.","Step 3: Update all API client applications to use the HTTPS endpoint."]},{item:"Enable API Gateway Logging",description:"Enable logging to Amazon CloudWatch Logs to help with security analysis, change tracking, and compliance auditing.",howto:["Step 1: Navigate to the API Gateway console in the AWS Management Console.","Step 2: Select the API you want to enable logging for.",'Step 3: Click on the "Stages" link in the left-hand navigation menu.',"Step 4: Select the stage you want to enable logging for.",'Step 5: Under the "Logs/Tracing" tab, click on the "Edit" button.','Step 6: Select the "Enable CloudWatch Logs" checkbox.',"Step 7: Choose a log level, and specify a log group name and a log stream name prefix.",'Step 8: Click on the "Save Changes" button.']},{item:"Restrict Access with API Gateway Resource Policies",description:"Define resource policies to restrict access to your APIs, based on IP address, Amazon VPC endpoint, or other attributes.",howto:["Step 1: Navigate to the API Gateway console in the AWS Management Console.","Step 2: Select the API you want to add a resource policy to.",'Step 3: Click on the "Resources" link in the left-hand navigation menu.',"Step 4: Select the resource you want to restrict access to.",'Step 5: Click on the "Actions" button, and select "Edit Resource Policy".',"Step 6: Specify the policy statement that..."]},{item:"Use AWS WAF with API Gateway",description:"Use AWS Web Application Firewall (WAF) with API Gateway to protect against common web exploits such as SQL injection and cross-site scripting (XSS).",howto:["Step 1: Navigate to the AWS WAF console in the AWS Management Console.","Step 2: Create a new web ACL, and add the appropriate rules to protect your API Gateway.","Step 3: Navigate to the API Gateway console in the AWS Management Console.","Step 4: Select the API you want to associate with the AWS WAF web ACL.",'Step 5: Under the "Security" tab, click on the "Edit" button next to "AWS WAF".','Step 6: Select the appropriate AWS WAF web ACL, and click on the "Save Changes" button.']},{item:"Implement Authorization with API Gateway",description:"Implement authorization with API Gateway to control who can access your APIs and what actions they can perform.",howto:["Step 1: Decide on an authorization method, such as Amazon Cognito or custom Lambda authorizers.","Step 2: Create or configure the appropriate authorization method for your API Gateway.","Step 3: Navigate to the API Gateway console in the AWS Management Console.","Step 4: Select the API you want to configure authorization for.",'Step 5: Under the "Resources" tab, select the resource you want to protect.','Step 6: Click on the "Method Request" box, and then click on the pencil icon to edit the method request.','Step 7: Expand the "Authorization Settings" section.',"Step 8: Select the appropriate authorization method from the dropdown menu.",'Step 9: Click on the "Save Changes" button.']},{item:"Protect Against Denial-of-Service (DoS) Attacks",description:"Configure rate limiting, throttling, and caching to protect against DoS attacks and to ensure high availability and performance.",howto:["Step 1: Navigate to the API Gateway console in the AWS Management Console.","Step 2: Select the API you want to protect against DoS attacks.",'Step 3: Click on the "Stages" link in the left-hand navigation menu.',"Step 4: Select the stage you want to configure for DoS protection.",'Step 5: Under the "Method Settings" tab, click on the "Edit" button for the HTTP method you want to protect.',"Step 6: Enable throttling and set a maximum number of requests per second or minute.","Step 7: Enable caching to reduce the number of requests that hit your backend.",'Step 8: Click on the "Save Changes" button.']},{item:"Use API Gateway Access Logging",description:"Use access logging to track and monitor requests to your APIs, and to help with troubleshooting and compliance auditing.",howto:["Step 1: Navigate to the API Gateway console in the AWS Management Console.","Step 2: Select the API you want to enable access logging for.",'Step 3: Click on the "Stages" link in the left-hand navigation menu.',"Step 4: Select the stage you want to enable access logging for.",'Step 5: Under the "Logs/Tracing" tab, click on the "Enable Access Logging" checkbox.',"Step 6: Choose a log format, and specify a log destination ARN.",'Step 7: Click on the "Save Changes" button.']},{item:"Secure API Gateway Credentials",description:"Use AWS Secrets Manager or AWS Key Management Service (KMS) to securely manage API Gateway credentials such as API keys and client certificates.",howto:["Step 1: Decide on a credential management method, such as AWS Secrets Manager or AWS KMS.","Step 2: Create or configure the appropriate credential management method for your API Gateway.","Step 3: Navigate to the API Gateway console in the AWS Management Console.","Step 4: Select the API you want to configure credential management for.",'Step 5: Under the "Settings" tab, click on the "API Keys" link.',"Step 6: Select the API key you want to secure.",'Step 7: Click on the "Edit" button next to the API key.','Step 8: Under the "Usage Plan" section, select the appropriate usage plan.','Step 9: Click on the "Save Changes" button.']}]}}},[[82,1,3]]]);
//# sourceMappingURL=main.730b4d56.chunk.js.map